<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2015-11-09T03:48:15-05:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress Blogging: How Its Going]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/octopres-blogging-how-its-going/"/>
    <updated>2015-11-05T07:02:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/octopres-blogging-how-its-going</id>
    <content type="html"><![CDATA[<p>Well, it&rsquo;s been since 2013-06-08, a little less than 2 &frac12; years,
since I moved my blogging platform and workflow to Markdown &ndash;
Octopress &ndash; Github, with a Python program I wrote to handle most of
the process.  I guess I should also state explicitly that I&rsquo;m actually
writing in GNU Emacs.</p>

<p>For the most part I&rsquo;m really happy with the workflow and tools but I
still go through periods where I just don&rsquo;t blog much.  I often
collect links and ideas but never sit down and write about them or
even simply do the &ldquo;tweet-length&rdquo; post.  There are a few barriers to
my blogging and it seems to take something that pushes me over that
wall to get me started again.  Last year it was Gina Trapani writing
about the 30 day blogging challenge that was going around.  Today it&rsquo;s
Ihnatko&rsquo;s mention of getting back into it with his rediscovery of
MarsEdit which really simplified his workflow.</p>

<!-- More -->


<h2>Here are the good parts</h2>

<p>Writing in Emacs is great since that&rsquo;s my preferred editor.</p>

<p>My program-driven workflow is quite effective. I just run
&ldquo;blog_post.py&rdquo; with the proper arguments and it handles moving files
around and running the right programs and tools.</p>

<p>I like having all of my content in Markdown.  That was really one of
the goals in the first place, to have my writing in transportable,
somewhat long-living files that could be easily read even in their
original format.</p>

<p>The blog looks great though it is quite monochromatic and may be due
for an overhaul of some sort.</p>

<p>It&rsquo;s important that I own and control all of my content.  I&rsquo;m not
posting it on someone else&rsquo;s blog site.  Okay, granted, I <em>am</em> posting it
on Github&rsquo;s site but the Markdown source remains on my own computer
under my control.</p>

<h2>Then the worst parts</h2>

<p>Right now my workflow is a three-phased affair.</p>

<ol>
<li>Write a post file in Markdown.</li>
<li>Generate the content and publish it on my local server for review.</li>
<li>Push to the public blog hosted on Github.</li>
</ol>


<p>The writing part is great but the generate phase, especially given the
current size of the blog what it is now with 154 posts including this
one, takes around 50 seconds.</p>

<p>One way to mitigate this is to split off a separate, static archive
blog with older posts.  I think taking it up through 2014 and letting
the &ldquo;live&rdquo; version begin with 2015 would do the trick.  With a link to
the old Archive on the main blog, it should be sort of seamless.  This
would affect searching some, though.</p>

<p>I have trouble writing the short posts since I have a tendcy to be
verbose.  I sit there, think more, and write more.  Then I have to
proof read the post, review the locally published version, go back
and fix errors, even include links (which I now put at the bottom),
and occasionally add a picture.</p>

<p>When posting a picture I check the rights and make sure that proper
credit is given.</p>

<p>So all of that amounts to what I might set out to do in maybe 10
minutes becomes an hour and and half of blogging.   Is that a bad
thing?  Maybe not, but it adds to the barrier.</p>

<p>Also, my blogging isn&rsquo;t portable.  If I&rsquo;m not at home where the server
is that I actually write the markdown on, then I can&rsquo;t blog.  Well, to
be fair, of course I can <em>write</em> if I&rsquo;m away from home but I can&rsquo;t
publish.</p>

<p>I could mitigate this if I moved the blogging onto a publicly
accessible machine but then I have the problem of backing up the
files, etc.</p>

<p>I&rsquo;ve started using Dropbox a little bit for writing files (another
blog post) and I suppose I could write my files there which would make
them accessible from anywhere.  Then, back on the ranch, I could do
the publishing phase.  After all, the blog is already public so having
it there on Dropbox shouldn&rsquo;t be that big a deal.</p>

<p>But then, writing a file in <em>any</em> place and pulling it in later isn&rsquo;t
that hard.</p>

<h2>Next Steps</h2>

<p>I&rsquo;m at least going to look into splitting off the archive.  I&rsquo;ll start
the split-off blog and then later on I can migrate more posts onto it.
Maybe a good plact to split is a little more than a year back, say 1
&frac12; years?</p>

<p>I&rsquo;ll think more about putting the files on Dropbox though I&rsquo;m not sure
there&rsquo;s a big push to do this since I can always move the files into
my source directory later if I&rsquo;m away from home.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfect Blogging Interface]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/perfect-blogging-interface/"/>
    <updated>2015-11-05T06:58:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/perfect-blogging-interface</id>
    <content type="html"><![CDATA[<p>I like what Andy Ihnatko wrote in his post &ldquo;Life On MarsEdit&rdquo; about
his conception of the perfect blogging interface.</p>

<blockquote><p>What I really want is a system-wide hotkey. No matter where I am or
what I’m doing, tapping it causes a little note card window to pop
up. I type a few sentences, maybe click a Twitter-style icon button to
drop in a photo or paste in a link (which the app automatically grabs
from the frontmost browser window), click the “Post” button, and then
I’m back to what I was doing before I had this brilliant idea for a
quick post.</p></blockquote>

<p>Blogging as easy as tweeting.  That makes perfect sense.</p>

<p><a href="http://ihnatko.com/2015/11/01/life-on-marsedit/">Life On MarsEdit</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More Short and Medium Length Blogging]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/more-short-and-medium-length-blogging/"/>
    <updated>2015-11-05T06:34:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/more-short-and-medium-length-blogging</id>
    <content type="html"><![CDATA[<p>Okay, fine, Andy Ihnatko has me spun up again about blogging more with
his disucussion on this week&rsquo;s Macbreak Weekly about blogging more
again and rediscovering MarsEdit  He refers to Jason Snell&rsquo;s Six
Colors, John Gruber&rsquo;s Daring Fireball and Jim Dalrymple&rsquo;s The Loop.
Even Leo said he was doing the same thing on his rejuvenated Leoville.</p>

<p>Okay, I&rsquo;ll try kicking it up a notch, but maybe it&rsquo;s also time to
reflect on my setup with Markdown &ndash; Octopress &ndash; Github pages.</p>

<p><a href="https://twit.tv/shows/macbreak-weekly/episodes/479">Macbreak Weekly #479</a><br />
<a href="http://ihnatko.com/">Andy Ihnatko&rsquo;s Celestial Waste of Bandwidth</a><br />
<a href="https://sixcolors.com/">Six Colors</a><br />
<a href="http://www.loopinsight.com/">The Loop</a><br />
<a href="http://www.leoville.com/">Leoville</a><br />
<a href="http://daringfireball.net/">Daring Fireball</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome OS and Android Merge]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/chrome-os-and-android-merge/"/>
    <updated>2015-11-05T06:31:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/chrome-os-and-android-merge</id>
    <content type="html"><![CDATA[<p>I think John Gruber of Daring Fireball said it best.  &ldquo;I think this
was inevitable. Android can (and does) run Chrome. Chrome can’t run
Android. And the browser-based web is decreasing in importance.&rdquo;</p>

<p><a href="http://daringfireball.net/linked/2015/11/02/chromeos-to-fold">WSJ: &ldquo;Google to Fold Chrome Operating System Into Android&rdquo;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kilogram Conflict Resolved at Last]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/14/kilogram-conflict-resolved-at-last/"/>
    <updated>2015-10-14T00:39:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/14/kilogram-conflict-resolved-at-last</id>
    <content type="html"><![CDATA[<blockquote><p>For decades, metrologists have strived to retire ‘Le Grand K’ — the
platinum and iridium cylinder that for 126 years has defined the
kilogram from a high-security vault outside Paris. Now it looks as if
they at last have the data needed to replace the cylinder with a
definition based on mathematical constants.</p></blockquote>

<p>&hellip;</p>

<blockquote><p>One method, pioneered by an international team known as the Avogadro
Project, involves counting the atoms in two silicon-28 spheres that
each weigh the same as the reference kilogram. This allows them to
calculate a value for Avogadro’s constant, which the researchers
convert into a value for Planck’s constant. Another method uses a
device called a watt balance to produce a value for Planck’s constant
by weighing a test mass calibrated according to the reference kilogram
against an eletromagnetic force.</p></blockquote>

<p><a href="http://www.nature.com/news/kilogram-conflict-resolved-at-last-1.18550">Kilogram Conflict Resolved at Last</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Explicit Programming]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/02/explicit-programming/"/>
    <updated>2015-10-02T02:44:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/02/explicit-programming</id>
    <content type="html"><![CDATA[<p>An excellent article that shows how being more explicit in the code
makes for programs that are more readable.</p>

<p><a href="https://www.dzombak.com/blog/2014/07/explicit-programming.html">Explicit Programming</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Service Oriented Architecture]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/02/service-oriented-architecture/"/>
    <updated>2015-10-02T02:36:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/02/service-oriented-architecture</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s an interesting article about Uber&rsquo;s use of service oriented
architecture (SOA).</p>

<blockquote><p>As core domain models grew and new features were introduced, our
components became tightly coupled, and enforcing encapsulation made
separation of concerns difficult. Continuous integration turned into a
liability because deploying the codebase meant deploying everything at
once. Our engineering team experienced rapid growth and scaling, which
not only meant handling more requests but also handling a significant
increase in developer activity. Adding new features, fixing bugs, and
resolving technical debt all in a single repo became extremely
difficult. Tribal knowledge was required before attempting to make a
single change.</p></blockquote>

<p><a href="https://eng.uber.com/soa/">Service-Oriented Architecture: Scaling Our Codebase As We Grow</a></p>

<p><a href="http://martinfowler.com/articles/microservices.html">Microservices</a></p>

<p><a href="https://en.wikipedia.org/wiki/Service-oriented_architecture">SOA on Wikipedia</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Poor Performance of Javascript on Android]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/01/poor-performance-of-javascript-on-android/"/>
    <updated>2015-10-01T06:05:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/01/poor-performance-of-javascript-on-android</id>
    <content type="html"><![CDATA[<p>In a posted discussion Jeff Atwood claims that, &ldquo;For several years now
we&rsquo;ve tracked the fact that, over time from 2012 onward, Android
JavaScript performance has become wildly divergent from iOS JavaScript
performance. And not in a good way.&rdquo;</p>

<p>He says:</p>

<blockquote><p>This is the benchmark most representative of Discourse performance,
and the absolute best known Android score for this benchmark is right
at ~400ms on a Samsung Galaxy S6. That doesn&rsquo;t seem too bad until you
compare..</p>

<p>iPhone 5 → 340ms<br />
iPhone 5s → 175ms<br />
iPhone 6 → 140ms<br />
iPad Air 2 → 120ms<br />
iPhone 6s → 60-70ms</p>

<p>In a nutshell, the fastest known Android device available today &mdash; and
there are millions of Android devices much slower than that out there
&mdash; performs 5× slower than a new iPhone 6s, and a little worse than a
2012 era iPhone 5 in Ember. How depressing.</p></blockquote>

<p><a href="https://meta.discourse.org/t/the-state-of-javascript-on-android-in-2015-is-poor/33889">The State of JavaScript on Android in 2015 is… poor</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whence The Chat Paradigm]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/09/30/whence-the-chat-paradigm/"/>
    <updated>2015-09-30T05:02:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/09/30/whence-the-chat-paradigm</id>
    <content type="html"><![CDATA[<p>For some reason, the chat paradigm has become overly popular.  Internet
relay chat (IRC) was interesting in the mid-90s as a way to
communicate in an informal, unstructured sense.  However, I can&rsquo;t
believe it&rsquo;s still so popular.  Then we have Hipchat, Slack and
others.  What&rsquo;s the deal?</p>

<p>What is the utility of an endless scroll of mixed up and confused,
uncollated, blended conversations with no good way to determine their
topics or context?</p>

<p>Maybe it is the valid rebellion against email.  I thought for a while
that email had reached the end of its usefulness.  However, in my own
personal quest for a substitute, I&rsquo;ve reluctantly come to the
conclusion that email is the only workable, reliable solution.</p>

<p>Granted phone text messages are how I normally communicate with my
family.  Beyond my immediate family, family and friends are all on
Facebook.  One or two people still seem to use Google+ and, of course,
most Google employees.</p>

<p>Email has subjects, labels and excellent search.  It accommodates
messages of any length, including super short.</p>

<p>I do like the idea of minimal email and Google Inbox makes a valiant
attempt but I expect it to be squashed any minute as is the end of all
Google services, useful or not, end up.  Ultimately, the native, plain
old Gmail is actually quite minimal when you really look at it.  Each
message in a conversation has the names of the people, a picture of
the sender and the message.  It looks like chat.</p>

<p>One personal change I&rsquo;ve made quietly over the past few months is to
drop all signatures including just signing my name on email messages.
The truth is we still have a compulsion to write an email message like
a letter or office memo, and not like a tweet or chat snippet.  I&rsquo;ll
still write in complete, hopefully correct, sentences with correct
spelling.  When corresponding with someone I don&rsquo;t often send email
to, then I&rsquo;m less familiar and will include my first name or full name
and maybe even a signature if it&rsquo;s a business message.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blue Moon Definition Was Wrong]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/08/02/blue-moon-definition-was-wrong/"/>
    <updated>2015-08-02T03:14:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/08/02/blue-moon-definition-was-wrong</id>
    <content type="html"><![CDATA[<p><em>This is a blog post I published in Mon 2010-11-22 on the previous
<a href="http://monolith149daily.blogspot.com/2010/11/blue-moon-definition-was-wrong.html">Monolith149 Daily
Site</a>.</em></p>

<p><em>What does this mean?  According to the &ldquo;new incorrect definition&rdquo; the
 blue moon was this past week 31 Jul (based on time zone actually) but
 the next &ldquo;old correct definition&rdquo; blue moon is not actually until 2016-05-21!</em></p>

<p>From a Space.com article by Joe Rao.</p>

<p>I was wrong.  My wife said last night that the moon was a blue moon.
I said, that&rsquo;s not possible because a blue moon is a second full moon
in the same month and that couldn&rsquo;t happen on 21 Nov.  It has to
happen at the very end of a month.  She pointed me at the above
article that explains it.</p>

<p>The short answer is that the two full moons in a month definition is
actually erroneous.</p>

<p>Rao notes that Lawrence J. Lafleur, in <em>Sky and Telescope</em> in 1943,
quotes a 1937 edition of the <em>Maine Farmer&rsquo;s Almanac</em>, stating that a
blue moon is the rare occurance of four full moons in a season instead
of three.  The blue moon is the third moon in that season.</p>

<p>The mistake was apparently made by James Hugh Pruett in a 1946 <em>Sky and
Telescope</em> where he misinterpreted Lafleur&rsquo;s explanation to mean a
second full moon in a single month.  (See the above article for
details).</p>

<p>The wrong explanation was propagated by Deborah Byrd in the radio
program &ldquo;Stardate&rdquo; in 1980 and then the wrong definition, quoting Rao,
&ldquo;went viral.&rdquo;</p>

<p>It all makes me wonder when I first learned of the
two-full-moons-in-a-month definition.  I would have thought it was
long before 1980, but maybe it was after that date.</p>

<p>Well it sort of spoils the whole thing.  Now we&rsquo;ll have to talk about
old-correct-definition blue moons and new-incorrect-definition blue
moons and none of them will seem quite right any more.</p>

<p>This would all be a lot simpler if the moon would just actually turn
blue once in a while.</p>

<p><a href="http://www.space.com/9566-strange-story-sunday-blue-moon.html">The Really Strange Story Behind Sunday&rsquo;s Blue Moon
by Joe Rao, SPACE.com, Skywatching Columnist, 2010-11-19 12:26:00 -0500</a></p>

<p><a href="https://en.wikipedia.org/wiki/Blue_moon">Blue moon from Wikipedia</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Without Docker]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/04/26/docker-without-docker/"/>
    <updated>2015-04-26T14:08:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/04/26/docker-without-docker</id>
    <content type="html"><![CDATA[<blockquote><ul>
<li><p>The systemd-nspawn command runs a command or OS in a lightweight
namespace container</p></li>
<li><p>&ldquo;In many ways it is similar to chroot(1), but more powerful since it
fully virtualizes the file system hierarchy, as well as the process
tree, the various IPC subsystems and the host and domain name.&rdquo;</p></li>
</ul>
</blockquote>

<p>Trying it out (from the article):</p>

<pre><code>systemd-nspawn -D debian-tree/ /bin/echo "hello, outside world!"
$ systemd-nspawn -D debian-tree/ /bin/bash 
$ systemd-nspawn -D debian-tree/ /sbin/init
</code></pre>

<blockquote><p>Some cool things you can do with systemd-nspawn:</p>

<p>&ldquo;Execute this command on my root filesystem, but roll back any changes
at the end&rdquo;</p>

<p>&ldquo;Run nginx inside its own container on boot, but limit it to 512 MB of
RAM and 200% CPU&rdquo;</p>

<p>&ldquo;Give me a container that has its own private network and its own IP
and MAC addresses, but map certain ports on the host to the container&rdquo;</p>

<p>&ldquo;Run this container with its own daemons in it, and monitor them to
make sure they don&rsquo;t fail&rdquo;</p>

<p>&ldquo;Download this container from the Docker Hub and run it every time I
boot, but without installing Docker&rdquo;</p></blockquote>

<p><a href="https://chimeracoder.github.io/docker-without-docker/#1">Docker Without Docker</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So Long Walter H. Haas]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/04/18/so-long-walter-h-haas/"/>
    <updated>2015-04-18T15:11:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/04/18/so-long-walter-h-haas</id>
    <content type="html"><![CDATA[<blockquote><p>Haas devoted his entire life to the study of the Moon and planets.</p></blockquote>

<p>&hellip;</p>

<blockquote><p>At a time when professional astronomers held little regard for amateur
observers beyond their meteor and variable-star reports, Haas changed
the paradigm. First, he published (in 1938, at age 21) his in-depth
observations of brightness changes around major lunar craters. Then,
four years later, he followed with a four-part, 76-page opus titled
&ldquo;Does Anything Ever Happen on the Moon?&rdquo; that appeared in the Journal
of the Royal Astronomical Society of Canada. These became the opening
salvo in a lifelong quest &ldquo;to arouse interest in a neglected branch of
astronomy.&rdquo;</p></blockquote>

<p>&hellip;</p>

<blockquote><p>On March 1, 1947, while still at UNM, he dispatched a self-produced
6-page newsletter titled The Strolling Astronomer. Haas already
envisioned this simple missive becoming something bigger: it was
subtitled &ldquo;Association of Lunar and Planetary Observers&rdquo; and branded
with &ldquo;Volume 1, Number 1.&rdquo; By the second issue, a month later, the
budding ALPO had grown to 41 members. Within six years, the
association boasted 350 members from all around the world.</p></blockquote>

<p><a href="http://www.skyandtelescope.com/astronomy-news/walter-haas-1917-2015-04072015/">Walter H. Haas (1917–2015) by Kelly Beatty</a><br /></p>

<p><a href="http://www.alpo-astronomy.org/">ALPO</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Terrible Technical Interview]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/03/23/the-terrible-technical-interview/"/>
    <updated>2015-03-23T08:40:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/03/23/the-terrible-technical-interview</id>
    <content type="html"><![CDATA[<p>An article from Tech Crunch by Jon Evans on how bad current interview
practices are.  It&rsquo;s quite interesting and echoes a lot of my
coworkers&#8217; and my recent sentiments.</p>

<blockquote><p>Traditional technical interviews are terrible for everyone. They’re a
bad way for companies to evaluate candidates. They’re a bad way for
candidates to evaluate companies. They waste time and generate stress
on both sides. Almost everyone, if pressed, will admit this. And yet
they persist.</p></blockquote>

<p>His solution:  Every candidate should bring with them a personal side
project the have done (this assumes a programming project) that they
can present in detail including code walk throughs and answering
questions.  The interviewer should be prepared to look at this in lieu
of asking white board questions and such.  This is a fascinating idea,
an excellent use of everyone&rsquo;s time, and could really change the whole
process for the better.  I don&rsquo;t hold a lot of hope this idea would
ever be widely adopted, if even adopted at all, but maybe.</p>

<p><a href="http://techcrunch.com/2015/03/21/the-terrible-technical-interview/">The Terrible Technical Interview</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gmail Inbox Mistake]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/03/23/gmail-inbox-mistake/"/>
    <updated>2015-03-23T08:13:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/03/23/gmail-inbox-mistake</id>
    <content type="html"><![CDATA[<p>Well, that was a mistake.  To a large degree I really like Gmail&rsquo;s new
Inbox IOS app, and the desktop version doesn&rsquo;t look bad either.  I&rsquo;ve
used it on a rarely-used account and recently added in anther,
more-often-used account so I could try out more interaction.  I heard
someone on a podcast say, It doesn&rsquo;t really affect your regular Gmail
interface interactions so you can use both at the same time.  That
seemed to be the case to me, so I thought, okay, I&rsquo;ll just fire it up
on my main Gmail account.</p>

<p>That was a mistake.</p>

<p>So it does have an effect in a particular way.  I should have seen
it.  The Gmail model is to treat messages like to do items and mark
them as &ldquo;Done&rdquo; when you are finished with them, instead of marking
them as &ldquo;Read.&rdquo;  Marking as &ldquo;Read&rdquo; is still there but it&rsquo;s
independent.  Of course, &ldquo;Done&rdquo; is yet another label though it doesn&rsquo;t
show up in the list of labels so maybe it&rsquo;s more a kind of state.
However, you can search in the regular Gmail for &ldquo;label:done&rdquo; and it
will find your done messages.  (That&rsquo;s giving away the ending).</p>

<p>With the Inbox app, you can go through and use the little &ldquo;sweep&rdquo;
icons to sweep away large collections of messages as &ldquo;Done,&rdquo; all in
one, uh, swoop.  Fortunately, it didn&rsquo;t seem to let me do more than
one month at a time.  I finally got tired of that, but then went back
to check the Gmail view.</p>

<p>My mistake was thinking &ldquo;Done&rdquo; in the Inbox app meant &ldquo;mark as Read&rdquo;
in the Gmail app, which was wrong.  So I&rsquo;d moved hundreds of messages
out of my Inbox to who knows where.  Well now we all know they no
longer had the Inbox label and now had the Done label or state.  (And,
yes, I&rsquo;m now going to stop using the quotes around all of these states
and labels).  Also, as we all should know, in Gmail, you don&rsquo;t move
anything but only ever add and remove labels.</p>

<p>Well, that was a big change.  Part of my Gmail organization, written
about recently, is how I keep some things in the Inbox and some bypass
it and are only in labels.</p>

<p>Now I&rsquo;d moved the Inbox-only items completely out of site, read or
unread.</p>

<p>Thinking quickly, too quickly, and acting too quickly, I realized I
could try the search &ldquo;label:done&rdquo; and find them all.  So I just took
that list, clicked the upper left box to check all on the screen, then
checked the little link that always pops up that says, &ldquo;Select all
messages that match this search&hellip;&rdquo; to select <em>all</em> of the Done
items.  Then I just added the Inbox label back to them.</p>

<p>Except now I move a lot of messages (again, hundreds) into the Inbox
that formerly my filter had kept from ever being in the Inbox.  My
levels of email importance, and the underlying sorting, are something
like this:</p>

<ul>
<li>Only in the Inbox</li>
<li>In the Inbox but with a label</li>
<li>Only in a label (not in the Inbox)</li>
<li>Only in a label and marked as read on delivery</li>
</ul>


<p>I should have included that list in my previous post.</p>

<p>I was finally able to mostly clean up this mess by selecting the
various labels, select all of the messages, which now had the Inbox
label, and click the Archive operation.  Archive is Gmail-speak for
special operation that just removes the Inbox label.</p>

<p>I should never have believed that the Inbox app would be harmless and
wouldn&rsquo;t have some effect on my regular Gmail account.  Gmail
desperately wants to manage my email for me (to the point of just
taking it over) and, as much as I really like Gmail and think it&rsquo;s by
far the best email solution, I have to beat it down hard with a big
stick every time it raises it&rsquo;s head and tries to attack my email with
unwanted help.  It&rsquo;s exhausting.</p>

<p>That&rsquo;s a metaphor for Google in general and will probably eventually
lead, in some large part, to their downfall.</p>

<p>I still like a lot about the Inbox app and it&rsquo;s interface and I&rsquo;ll
keep experimenting with a much less important account.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is OS X Yosemite 10.10 is Safe Without Anti Virus?]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/03/20/is-os-x-yosemite-10-dot-10-is-safe-without-anti-virus/"/>
    <updated>2015-03-20T05:11:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/03/20/is-os-x-yosemite-10-dot-10-is-safe-without-anti-virus</id>
    <content type="html"><![CDATA[<p>In the Apple Support Communities, Linc Davis gives an excellent
answer to this question with a summary of the built-in security
features of OS X 10.10 and the additional precautions you should take.</p>

<blockquote><p>All versions of OS X since 10.6.7 have been able to detect known
Mac malware in downloaded files, and to block insecure web
plugins. This feature is transparent to the user. Internally Apple
calls it &ldquo;XProtect.&rdquo;</p></blockquote>

<p>&hellip;</p>

<blockquote><p>Starting with OS X 10.7.5, there has been a second layer of
built-in malware protection, designated &ldquo;Gatekeeper&rdquo; by Apple. By
default, applications and Installer packages downloaded from the
network will only run if they&rsquo;re digitally signed by a developer with
a certificate issued by Apple. Software certified in this way hasn&rsquo;t
necessarily been tested by Apple, but you can be reasonably sure that
it hasn&rsquo;t been modified by anyone other than the developer. His
identity is known to Apple, so he could be held legally responsible if
he distributed malware. That may not mean much if the developer lives
in a country with a weak legal system (see below.)</p></blockquote>

<p>&hellip;</p>

<blockquote><p>Starting with OS X 10.8.3, a third layer of protection has been
added: a &ldquo;Malware Removal Tool&rdquo; (MRT). MRT runs automatically in the
background when you update the OS. It checks for, and removes, malware
that may have evaded the other protections via a Java exploit (see
below.) MRT also runs when you install or update the Apple-supplied
Java runtime (but not the Oracle runtime.) Like XProtect, MRT is
effective against known threats, but not against unknown ones. It
notifies you if it finds malware, but otherwise there&rsquo;s no user
interface to MRT.</p></blockquote>

<p>His answer is the third one down.</p>

<p><a href="https://discussions.apple.com/thread/6624843">Is OS X Yosemite 10.10 is safe without anti virus?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happy Vernal Equinox]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/03/20/happy-vernal-equinox/"/>
    <updated>2015-03-20T05:00:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/03/20/happy-vernal-equinox</id>
    <content type="html"><![CDATA[<p>Happy vernal equinox, today at 18:45 EDT, 22:45 UTC.</p>

<p>Fri 2015-03-20 18:45:00 -0400<br />
Fri 2015-03-20 22:45:00 +0000<br /></p>

<p><a href="http://en.wikipedia.org/wiki/Equinox">Equinox</a><br />
<a href="">Everything you need to know: September equinox</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dealing with Email]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/02/23/dealing-with-email/"/>
    <updated>2015-02-23T06:18:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/02/23/dealing-with-email</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve used email since the beginning of the early days of the
Internet&rsquo;s explosion in the mid-80s.  It&rsquo;s gone through quite an
evolution as have my methods of managing what is probably a massive
flood of incoming information.  Since my methods work pretty well for
me, I really wouldn&rsquo;t know.</p>

<p>Lately I hear people either discussing how they fight their huge
battle with email, sometimes winning and sometimes losing, and I&rsquo;m
struck by how often they seem to miss some techniques I&rsquo;ve taken for granted
for years now.</p>

<p>In my current job I spend about 20 minutes reading email in the
morning.  After that, all of the email labels (basically folders if
that&rsquo;s the paradigm you use) are read, I&rsquo;m at what is sometimes called
&ldquo;inbox zero.&rdquo;  Throughout the rest of the day, I watch for occasional
emails from my team and the chain of people I report to.  That&rsquo;s
basically it.  I never see an email message that I wouldn&rsquo;t want to.</p>

<p>Here are the main techniques that I&rsquo;ve found success in using.</p>

<!-- More -->


<h2>Use Gmail</h2>

<p>I&rsquo;ve used Gmail since it came out in 2004, both for personal and work
email.  In all that time, I&rsquo;ve never deleted an email message.  That
was an original idea of Gmail, you were never expected to.  Google&rsquo;s
email service effectively deals with spam so that&rsquo;s immediately out of
the equation.  I&rsquo;ve barely given a thought to spam in that many
years. I don&rsquo;t check my spam folder.  There were maybe two times when
I seemed to be missing a message and I found a false positive in
there, but that&rsquo;s it.</p>

<p>Some people seem to be mystified by or simply don&rsquo;t like the
conversation view.  I can&rsquo;t imagine why this is.  It&rsquo;s the most
effective and logical to view an exchange of messages.  The list of
&ldquo;messages&rdquo; (actually conversations) in a mailbox is immediately
shorter, you can see how many are unread by conversation, and the
snippets show you a bit of context.</p>

<p>I&rsquo;ve used or taken a careful look at most of the email programs,
interfaces and services over it&rsquo;s history, particularly in roles of
providing user support and also being a system administrator of email
servers.  Please take my word for this, conversations in Gmail is the
best way to read email.</p>

<h2>Use Filters and Labels</h2>

<p>I use lots of filters.  The filters themselves aren&rsquo;t terribly
complicated.  Usually they either filter by who the email is from (one
of my bosses), who it&rsquo;s to, typically an email list, e.g., my team,
and sometimes the subject line.</p>

<p>The filter usually skips the inbox which means the message won&rsquo;t
appear there.  (Gmail tip:  There is no inbox.  There&rsquo;s nothing but a
gigantic barrel of all of your email, but you typically view it by
labels on the email. &ldquo;Inbox&rdquo; is just another label.  So is
&ldquo;Spam&rdquo;. Etc.)  They usually go into a custom label and may be marked
as read or not.</p>

<p>When naming labels, I give them names so they are properly sorted in
the left hand column.  Important filters start with the letter A,
e.g., &ldquo;A Bosses&rdquo;, &ldquo;A Team&rdquo;, &ldquo;A Project XYZ.&rdquo;  The filters for those
labels won&rsquo;t be marked as read so I can see how many unread messages
there are from a boss, my team, on the project.</p>

<p>After that come some less important labels like &ldquo;B Some Other
Project&rdquo;, &ldquo;B Meeting X&rdquo;, etc.  Those might be unread or they might
actually be marked as read.  They don&rsquo;t show up as bold with an
unread count, but I can go look at that &ldquo;pile&rdquo; if I ever need to see
what&rsquo;s been going on there.  Similarly, there are a few labels
starting with &ldquo;C&rdquo; that are even farther down on the list.</p>

<p>Below those, and probably off the screen, are labels without a special
sorting letter in their name.  Usually all of those are marked as read
(by the filter when the email arrives) and chances are I&rsquo;ll never look
at them.  This is where things go like chatty notification services
which is effectively noise.  There maybe tens of thousands of messages
in these.  If there were some particular kinds of messages in there I
needed so see, lost in that noise, then that means writing a more
specific filter to put those messages in a more important label and
leaving them unread.</p>

<p>Finally, you can set each label to be shown or not.   If you mark it
as not shown, then it won&rsquo;t even be in the left-hand list  when you
scroll down.  At the end of the list it says &ldquo;More&rdquo; with a little
arrow.  You click that to extend the list with the rest of the
not-shown labels.  If there are labels of mail I don&rsquo;t even care to
remember the existence of, I don&rsquo;t need to be reminded they are there,
I put them in that list.  It&rsquo;s like the closet, or maybe even the
trash heap.</p>

<p>After all of the filtering is done, all that remains in my inbox is
the general, uncategorized email, that I need to ready on a daily
basis.  That&rsquo;s reduced down to the 20 or so messages I read each day.</p>

<h2>Read Selectively</h2>

<p>Now I can look at my labels in the morning and see what messages
are there.  There are maybe 10 labels I read each morning but I don&rsquo;t
go through each label reading messages one by one.</p>

<p>I read the reporting chain label, team mail, and then typically the
inbox next.  Note that I&rsquo;ve been a GTD advocate and user for some six
years, so, of course, I don&rsquo;t spend more than a couple of minutes on a
message.  If a message is a long read, or requires something to be
done, I add an item to my Next Actions list, or some appropriate
list.  I usually put a link back to the message in the action.</p>

<p>(Gmail tip:  You can refer back to any particular conversation/message
by copying the link from the browser.  That link will always work for
that message.  I typically just add a word &ldquo;[Email]&rdquo; and link the
&ldquo;Email&rdquo; part to the message so I can just click on it.)</p>

<p>So I might have one or two new actions.</p>

<p>(Gmail tip:  You can search using the search term &ldquo;label:<label name>
is:unread&rdquo; to see all of the unread messages in a label.   This also
works for seeing just the unread messages in your inbox, e.g.,
&ldquo;label:inbox is:unread&rdquo;.  If I click on a label, the &ldquo;label:<label
name>&rdquo; is already in the search box (because that&rsquo;s all clicking on a
label does, it does that search).  Then, clicking in the search box
drops down the &ldquo;is:unread&rdquo; added to it because it&rsquo;s been used before,
so no typing is needed.</p>

<p>For some chains, I just flip through the messages quickly to see what
their content is.  If there&rsquo;s not a need to read it then or maybe
ever, I don&rsquo;t.  This is different from just marking it as read.  I
still open and look at each message to be sure I know what it&rsquo;s about.</p>

<p>For some labels, I don&rsquo;t even do that.  I just open the label and look
at the conversation subjects and snippets.  Often that&rsquo;s enough,
because this label already represents reduced importance.  Then I just
check all of the boxes by checking the one box up at the top of the
list, go to the &ldquo;More&rdquo; menu button and select &ldquo;Mark all as read.&rdquo;
Done for that label.</p>

<p>For the rest of the day I keep my team&rsquo;s label selected and ignore
most of the other labels, and the inbox, even though they accumulate
new, unread messages through the day.  They&rsquo;ll be dealt with next
morning.</p>

<h2>Concluding</h2>

<p>So, the basic idea is to tune the incoming email so I only see what I
need to see, and only read what&rsquo;s important.  I&rsquo;ve found that most of
this tuning can be done in four to six weeks of a new job, then there
is a decreasing number of tweaks through out six months to a year.
Beyond that, I only tweak a filter or add a label every three to six
months probably.</p>

<p>Some readers here may note that Gmail will automatically prioritize
your messages and even sort it into major categories to help you read
it.  I&rsquo;ve heard that these seem to work quite well.  I actually turn
all of those features off since my email handling is already finely
tuned.</p>

<p>Note what I don&rsquo;t worry about:  mail quotas, deciding what messages to
delete, organizing folders, spam.  Those are problems more than 10
years in my past.  I&rsquo;m amazed people still have to battle them on a
daily basis.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NixOS Linux]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/01/14/nixos-linux/"/>
    <updated>2015-01-14T08:04:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/01/14/nixos-linux</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t recall hearing of NixOS Linux until a tweet crossed my Twitter
feed about a new release during the week between Christmas and New
Year&rsquo;s.  I looked it up and was fascinating by the new ideas and
approaches there.  Here&rsquo;s my awkward summar.</p>

<ul>
<li>Packages are immutable, like values in a functional language. Making configuration changes involves generating a new package.</li>
<li>Each package instance, each version, is stored on the system in it&rsquo;s
own directory.  Files aren&rsquo;t installed all over the place in /usr/local/lib, /usr/lib, /usr/local/bin, etc.</li>
<li>Due to the above, aliases are much more important than search paths.</li>
<li>Also, the dependency tree for a package is very straightforward.</li>
<li>System configuration is via a functional language and is a single expression in one file.</li>
<li>So you can easily boot and run any configuration, back out changes, etc.</li>
</ul>


<p>I installed it on a Virtual box VM and played with it briefly.  One of
the first negative things I noticed was a ps listing.  Since each
package instance is under a single nixos directory with a directory
named by a long random hash, and since every running process is in a
bin directory (or some such) in one of those, the path to any running
program is a bear.</p>

<p>I pulled down nginx.  That was easy.  But then I went to configure it
and that&rsquo;s where I came face to face with NixOS&#8217; trade off.  You don&rsquo;t
change files in a package.  As I understand it so far, you add code
into the single configuration file that essentially edits, in this
case, the nginx config file in a sort of sed-like way, and produces a
new package instance that is used.  So a nice and simple config file
from nginx was turned into a functional language expression that now
requires me to go learn that language.</p>

<p>I stopped at that point but I&rsquo;m still fascinated by the distribution
and the ideas there.  There are some nice hard lines and properties of
cleanliness here.  Once the investment is made in learning the Nix
config language, it may be straightforward to move on and maintain
systems.  For a simple server instance this may be something to try.</p>

<p>So, I&rsquo;ll move on with it soon and see how it goes.</p>

<p><a href="http://nixos.org/">Nixos.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bazaar]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/01/14/bazaar/"/>
    <updated>2015-01-14T07:33:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/01/14/bazaar</id>
    <content type="html"><![CDATA[<p>From looking at my development directories, it appears that it was in
early 2008 that I moved my personal source code control system from
CVS to Bazaar.  (Before that I&rsquo;d used RCS and even SCCS) I learned
about Bazaar from a coworker, John.  It was Python-based, the system
used by Canonical for Ubuntu and I found it to work extremely well.
Since then, for seven years now, I&rsquo;ve used it for my personal version
management and also as a shadow version control system at work.</p>

<p>It has been extremely stable for me, fast, and I can&rsquo;t think of any
trouble I&rsquo;ve ever had with Bazaar.  However, lately I&rsquo;ve seen
indications that Bazaar is no longer maintained and may be declining
as a version control choice.  Maybe it was never that popular.</p>

<p>Lately, Git seems to be the version control system of choice and it is
the system I use every day for work.  I&rsquo;m wondering if I should start
using it for my personal work.  The command set and, as they say, &ldquo;the
workflow&rdquo; is different.  It&rsquo;s not friendly to large binary blobs.
That&rsquo;s probably okay.</p>

<p>I already like it less because, if I want to make a branch of a
particular version or another branch to work on, there needs to be a
root branch of sorts, a hub to clone the other branch from.  With
Bazaar you can just branch any branch, merge changes from it, etc.  So
now I&rsquo;ll have to make some local hub to clone, push and pull from.
Yech.  That seems so archaic now.</p>

<p>However, I found this blog post by Jelmer Vernooij who was a primary
developer of Bazaar.  He basically tells the complete history and also
how it&rsquo;s finally been abandoned for the most part.  So, I guess I
should start moving on to git.</p>

<p>I won&rsquo;t even try to convert over my current bzr projects.  There is
Mercurial which may be worth a look.  Ah well.</p>

<blockquote><p>Contributions from people outside of the Canonical Bazaar team had
become rare by mid-2011. In early 2012 the members of the Canonical
Bazaar team were assigned to other projects, though we would still fix
the occasional bug in Bazaar. Martin left Canonical in April 2012.</p>

<p>During my spare time in the first 6 months of 2012 I tried to finish
my remaining in-progress branches. After that, I thought I would see
how it would go.</p>

<p>I think it&rsquo;s time to move on. There are still some things I don&rsquo;t like
about it, but Git is a decent source code management system. Bazaar
isn&rsquo;t going anywhere; no doubt there will be users for a few years to
come, and people contributing fixes, but it hasn&rsquo;t been adopted to the
level I was hoping.</p></blockquote>

<p><a href="https://www.stationary-traveller.eu/pages/bzr-a-retrospective.html">Bazaar-NG: 7 years of hacking on a distributed version control system</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Intel Gave Stephen Hawking a Voice]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/01/14/how-intel-gave-stephen-hawking-a-voice/"/>
    <updated>2015-01-14T07:28:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/01/14/how-intel-gave-stephen-hawking-a-voice</id>
    <content type="html"><![CDATA[<p>From Wired by Joao Medeiros.</p>

<blockquote><p>Hawking is very attached to his voice: in 1988, when Speech Plus gave
him the new synthesizer, the voice was different so he asked them to
replace it with the original. His voice had been created in the early
&lsquo;80s by MIT engineer Dennis Klatt, a pioneer of text-to-speech
algorithms. He invented the DECtalk, one of the first devices to
translate text into speech. He initially made three voices, from
recordings of his wife, daughter and himself. The female’s voice was
called &ldquo;Beautiful Betty&rdquo;, the child’s &ldquo;Kit the Kid&rdquo;, and the male
voice, based on his own, &ldquo;Perfect Paul.&rdquo; &ldquo;Perfect Paul&rdquo; is Hawking&rsquo;s
voice.</p></blockquote>

<p><a href="http://www.wired.com/2015/01/intel-gave-stephen-hawking-voice/">How Intel Gave Stephen Hawking a Voice</a></p>
]]></content>
  </entry>
  
</feed>
