<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2015-11-21T14:56:21-05:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meeblip Synthesizer]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/meeblip-synthesizer/"/>
    <updated>2015-11-21T14:42:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/meeblip-synthesizer</id>
    <content type="html"><![CDATA[<p>The Meeblip is a nifty little synthesizer with MIDI input.  If memory
serves it seems to have a set of oscillators, filters and LFO that&rsquo;s
about the same as the original Mini Moog.</p>

<p><a href="http://meeblip.com/">meeblip.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Write a Python Web Framework]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework/"/>
    <updated>2015-11-21T05:17:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework</id>
    <content type="html"><![CDATA[<p>You don&rsquo;t have to use Django, Flask, Cherrypy, or even web.py.  It&rsquo;s
all about WSGI.  Guess what.  Everything you need is already built
into Python.  After all, Python promises &ldquo;batteries included.&rdquo;</p>

<p><a href="http://funwithlinux.net/2015/11/how-to-write-a-python-web-framework-from-scratch/">How To Write a Python Web Framework From Scratch</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PC Engines]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/pc-engines/"/>
    <updated>2015-11-21T05:12:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/pc-engines</id>
    <content type="html"><![CDATA[<p>These are fascinating little computer boards and boxes that seem
perfect for making firewalls and such.  Boards are available with
three gigabit ethernet ports.  Prices are in the $100 range and there
is  support for Linux, e.g., Ubuntu.  Steve Gibson mentioned them on
Security Now.</p>

<p><a href="http://pcengines.ch/">pcengines.ch</a><br />
<a href="https://twit.tv/shows/security-now/episodes/534?autostart=false">Security Now 534</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging in Twitter Language]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/blogging-in-twitter-language/"/>
    <updated>2015-11-21T04:49:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/blogging-in-twitter-language</id>
    <content type="html"><![CDATA[<p>There&rsquo;s one thing Twitter has done and that&rsquo;s change the language of
reading news and stories so I&rsquo;m going to try an experiment.</p>

<!-- More -->


<p>Regardless of however things work out for Twitter it has had one
unmistakable effect on the way articles, essays, and other writing is
presented.  When you look at Facebook, Apple&rsquo;s News app, and almost
any site like Recode or The Verge, nearly everything looks like a
tweet.  You click on it to read the article.</p>

<p>Now, it&rsquo;s always the case that there&rsquo;s nothing new under the sun.
Headlines with snippets have been popular at least going back to the
80s, if memory serves and I&rsquo;m sure that, if I took the time to do the
research, I could find that story snippets are as old as news
publishing itself.  I believe I recall in the 80s when newspapers
started publishing a sort of index on page two of tweet-looking
headlines and snippets.  Magazines have done the same thing on their
index pages for a long time.</p>

<p>Still, the shift in the look of any story-collecting web site or, more
importantly, phone app has changed so that they all look strikingly
familiar.</p>

<p>So, at the risk of appearing as a trend follower, I&rsquo;m going to try
breaking my blog stories so that there&rsquo;s a shorter blurb on the main
page and you click to read the full story.</p>

<p>I guess there&rsquo;s a risk here when the blog post is mainly there to
share a link since you might have to click twice but maybe not.  Those
posts just won&rsquo;t have the &ldquo;Read More&rdquo; link but the actual story link
itself.  After all I can always do what I want here.  I can grow back
the main page piece as much as I want when I want.  That&rsquo;s part of
what&rsquo;s great about keeping your own blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apollo 11 Restored Video]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/18/apollo-11-video-restoration/"/>
    <updated>2015-11-18T06:52:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/18/apollo-11-video-restoration</id>
    <content type="html"><![CDATA[<p>From Wikipedia:</p>

<blockquote><p>The Apollo 11 missing tapes refers to Apollo 11&rsquo;s slow-scan television
(SSTV) telecast recorded in its raw format on telemetry data tape
during the time of the first Moonlanding in 1969. The recordings were
discovered to be &ldquo;missing&rdquo; after a team of retired NASA employees and
contractors tried to locate the tapes in the early 2000s.</p></blockquote>

<!-- More -->


<blockquote><p>The data tapes were recorded as a backup in case the live television
broadcasts failed for any reason. In order to broadcast the SSTV
transmission on standard television, NASA ground receiving stations
performed real-time scan conversion to the NTSC television format. The
moonwalk&rsquo;s converted video signal was broadcast live around the world
on July 21, 1969 (UTC). At the time, the NTSC broadcast was recorded
on many videotapes and kinescope films: they were never missing.</p></blockquote>

<p>&hellip;</p>

<blockquote><p>Although the researchers never found the telemetry tapes they were
looking for, they did discover the best visual quality NTSC videotapes
as well as super 8 movie film taken of a video monitor in Australia,
showing the SSTV transmission before it was converted. These visual
elements were processed in 2009, as part of a NASA approved
restoration project of the first Moonwalk. At a 2009 news conference
in Washington, D.C., the research team released its findings regarding
the tapes&#8217; disappearance. They also partially released newly enhanced
footage obtained during the search. Lowry Digital completed the full
Moonwalk restoration project in late 2009.</p></blockquote>

<p><a href="https://en.wikipedia.org/wiki/Apollo_11_missing_tapes">Apollo 11 missing tapes (from Wikipedia)</a>
<a href="https://www.nasa.gov/multimedia/hd/apollo11_hdpage.html">Apollo 11 HD Videos (NASA)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rebuilding the HP-11 Series]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/17/rebuilding-the-hp-11-series/"/>
    <updated>2015-11-17T09:03:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/17/rebuilding-the-hp-11-series</id>
    <content type="html"><![CDATA[<p>Michael Steinmann of Swiss Micros is building new, little,
fully-functioning HP-11 series, and other, HP calculators.</p>

<blockquote><p>Peruse Michael’s site and you won’t find carbon copies of the
HP-12C. Instead, you’ll discover a range of miniaturised versions –
hardware emulations no less – of the most popular models in that early
generation of HP calculators, all powered by a low-power LPC1115 ARM
processor.</p></blockquote>

<p>I never owned the HP-11C though I have a nifty emulator on my iPhone.
I had owned the HP-25 and 29C before its time and later the HP-41CV
and the HP-48S.  I definitely wanted one of the little sideways 11C&rsquo;s
though.</p>

<p><a href="http://www.alphr.com/technology/1001717/the-rebirth-of-the-hp-12c-how-one-man-reimagined-a-calculator-from-1981">The rebirth of the HP-12C: How one man reimagined a calculator from 1981</a>
by Steve Cassidy on Alphr.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrade to Mac OS X 10.11]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/17/upgrade-to-mac-os-x-10-dot-11/"/>
    <updated>2015-11-17T08:55:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/17/upgrade-to-mac-os-x-10-dot-11</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve finally upgraded to Mac OS X 10.11 at home.  There&rsquo;s really not
much to say so far.  The only new/changed feature I really see and use
is Mission Control.  Ohter than that it&rsquo;s pretty much business as
usual.</p>

<p>The process went quite smoothly.  I started the download and left it
unattended.  Then I returned later and started the install and left it
running unattended.  Note that I usually never leave an upgrade
running but they did take a few minutes and I had other things to do
including even being out of the house for a while.</p>

<p>When I came back and the new login screen was presented I logged in
with no trouble and only had to enter the Apple id for iCloud.</p>

<p>There may be features I&rsquo;m using that are new or changed and I haven&rsquo;t
used them enough in the past so I&rsquo;m unaware of the differences.</p>

<p>I hear that Notes has become quite good but I&rsquo;m sticking with Evernote
and Drafts on my phone.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KeyKOS The Nanokernel]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/14/keykos-the-nanokernel/"/>
    <updated>2015-11-14T21:44:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/14/keykos-the-nanokernel</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t recall ever having heard of this operating system.  The ideas
sound quite interesting and nice.  There&rsquo;s a lot I have imagined in
here.</p>

<p>From the abstract:</p>

<blockquote><p>The KeyKOS nanokernel is a capability-based object-oriented operating
system that has been in production use since 1983. Its original
implementation was motivated by the need to provide security,
reliability, and 24-hour availability for applications on the Tymnet®
hosts. Requirements included the ability to run multiple
instantiations of several operating systems on a single hardware
system. KeyKOS was implemented on the System/370, and has since been
ported to the 680x0 and 88x00 processor families. Implementations of
EDX, RPS, VM, MVS, and UNIX® have been constructed. The nanokernel is
approximately 20,000 lines of C code, including capability,
checkpoint, and virtual memory support. The nanokernel itself can run
in less than 100 Kilobytes of memory.</p>

<p>KeyKOS is characterized by a small set of powerful and highly
optimized primitives that allow it to achieve performance competitive
with the macrokernel operating systems that it replaces. Objects are
exclusively invoked through protected capabilities, supporting high
levels of security and intervals between failures in excess of one
year. Messages between agents may contain both capabilities and
data. Checkpoints at tunable intervals provide system-wide backup,
fail-over support, and system restart times typically less than 30
seconds. In addition, a journaling mechanism provides support for
high-performance transaction processing. On restart, all processes are
restored to their exact state at the time of checkpoint, including
registers and virtual memory.</p></blockquote>

<p><a href="http://www.cis.upenn.edu/~KeyKOS/NanoKernel/NanoKernel.html">The KeyKOS Nanokernel Architecture</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Snowflake Method]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/14/the-snowflake-method/"/>
    <updated>2015-11-14T21:37:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/14/the-snowflake-method</id>
    <content type="html"><![CDATA[<p>The Snowflake Method for writing a novel by Randy Ingermanson is just
brilliant.  I&rsquo;m convinced this would work and it&rsquo;s so nicely done, I&rsquo;m
drawn to try it and I don&rsquo;t even want to write a novel.</p>

<p>It&rsquo;s very similar to the approach I take to writing in general,
though, and in fact I guess it&rsquo;s how I was taught to write in school.</p>

<p><a href="http://www.advancedfictionwriting.com/articles/snowflake-method/">The Snowflake Method For Designing A Novel</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Edward Tuft CSS]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/14/edward-tuft-css/"/>
    <updated>2015-11-14T21:32:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/14/edward-tuft-css</id>
    <content type="html"><![CDATA[<p>This is an interesting take on style, typesetting, publishing, and
CSS.  I don&rsquo;t agree with all of it but there are some nice ideas here
and the page/approach is very nice looking.</p>

<p>The main thing I disagree with is Tufte&rsquo;s strong preference for text
and prose rather than lists.  I think this is highly dependent on a
person&rsquo;s individual taste.  Also I&rsquo;m not convinced that a person who&rsquo;s
scanning an email message or document will absorb a paragraph of prose
as well as a bullet list.</p>

<p><a href="https://edwardtufte.github.io/tufte-css/">Tuft CSS</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Blogging: How Its Going]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/octopres-blogging-how-its-going/"/>
    <updated>2015-11-05T07:02:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/octopres-blogging-how-its-going</id>
    <content type="html"><![CDATA[<p>Well, it&rsquo;s been since 2013-06-08, a little less than 2 &frac12; years,
since I moved my blogging platform and workflow to Markdown &ndash;
Octopress &ndash; Github, with a Python program I wrote to handle most of
the process.  I guess I should also state explicitly that I&rsquo;m actually
writing in GNU Emacs.</p>

<p>For the most part I&rsquo;m really happy with the workflow and tools but I
still go through periods where I just don&rsquo;t blog much.  I often
collect links and ideas but never sit down and write about them or
even simply do the &ldquo;tweet-length&rdquo; post.  There are a few barriers to
my blogging and it seems to take something that pushes me over that
wall to get me started again.  Last year it was Gina Trapani writing
about the 30 day blogging challenge that was going around.  Today it&rsquo;s
Ihnatko&rsquo;s mention of getting back into it with his rediscovery of
MarsEdit which really simplified his workflow.</p>

<!-- More -->


<h2>Here are the good parts</h2>

<p>Writing in Emacs is great since that&rsquo;s my preferred editor.</p>

<p>My program-driven workflow is quite effective. I just run
&ldquo;blog_post.py&rdquo; with the proper arguments and it handles moving files
around and running the right programs and tools.</p>

<p>I like having all of my content in Markdown.  That was really one of
the goals in the first place, to have my writing in transportable,
somewhat long-living files that could be easily read even in their
original format.</p>

<p>The blog looks great though it is quite monochromatic and may be due
for an overhaul of some sort.</p>

<p>It&rsquo;s important that I own and control all of my content.  I&rsquo;m not
posting it on someone else&rsquo;s blog site.  Okay, granted, I <em>am</em> posting it
on Github&rsquo;s site but the Markdown source remains on my own computer
under my control.</p>

<h2>Then the worst parts</h2>

<p>Right now my workflow is a three-phased affair.</p>

<ol>
<li>Write a post file in Markdown.</li>
<li>Generate the content and publish it on my local server for review.</li>
<li>Push to the public blog hosted on Github.</li>
</ol>


<p>The writing part is great but the generate phase, especially given the
current size of the blog what it is now with 154 posts including this
one, takes around 50 seconds.</p>

<p>One way to mitigate this is to split off a separate, static archive
blog with older posts.  I think taking it up through 2014 and letting
the &ldquo;live&rdquo; version begin with 2015 would do the trick.  With a link to
the old Archive on the main blog, it should be sort of seamless.  This
would affect searching some, though.</p>

<p>I have trouble writing the short posts since I have a tendcy to be
verbose.  I sit there, think more, and write more.  Then I have to
proof read the post, review the locally published version, go back
and fix errors, even include links (which I now put at the bottom),
and occasionally add a picture.</p>

<p>When posting a picture I check the rights and make sure that proper
credit is given.</p>

<p>So all of that amounts to what I might set out to do in maybe 10
minutes becomes an hour and and half of blogging.   Is that a bad
thing?  Maybe not, but it adds to the barrier.</p>

<p>Also, my blogging isn&rsquo;t portable.  If I&rsquo;m not at home where the server
is that I actually write the markdown on, then I can&rsquo;t blog.  Well, to
be fair, of course I can <em>write</em> if I&rsquo;m away from home but I can&rsquo;t
publish.</p>

<p>I could mitigate this if I moved the blogging onto a publicly
accessible machine but then I have the problem of backing up the
files, etc.</p>

<p>I&rsquo;ve started using Dropbox a little bit for writing files (another
blog post) and I suppose I could write my files there which would make
them accessible from anywhere.  Then, back on the ranch, I could do
the publishing phase.  After all, the blog is already public so having
it there on Dropbox shouldn&rsquo;t be that big a deal.</p>

<p>But then, writing a file in <em>any</em> place and pulling it in later isn&rsquo;t
that hard.</p>

<h2>Next Steps</h2>

<p>I&rsquo;m at least going to look into splitting off the archive.  I&rsquo;ll start
the split-off blog and then later on I can migrate more posts onto it.
Maybe a good plact to split is a little more than a year back, say 1
&frac12; years?</p>

<p>I&rsquo;ll think more about putting the files on Dropbox though I&rsquo;m not sure
there&rsquo;s a big push to do this since I can always move the files into
my source directory later if I&rsquo;m away from home.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perfect Blogging Interface]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/perfect-blogging-interface/"/>
    <updated>2015-11-05T06:58:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/perfect-blogging-interface</id>
    <content type="html"><![CDATA[<p>I like what Andy Ihnatko wrote in his post &ldquo;Life On MarsEdit&rdquo; about
his conception of the perfect blogging interface.</p>

<blockquote><p>What I really want is a system-wide hotkey. No matter where I am or
what I’m doing, tapping it causes a little note card window to pop
up. I type a few sentences, maybe click a Twitter-style icon button to
drop in a photo or paste in a link (which the app automatically grabs
from the frontmost browser window), click the “Post” button, and then
I’m back to what I was doing before I had this brilliant idea for a
quick post.</p></blockquote>

<p>Blogging as easy as tweeting.  That makes perfect sense.</p>

<p><a href="http://ihnatko.com/2015/11/01/life-on-marsedit/">Life On MarsEdit</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More Short and Medium Length Blogging]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/more-short-and-medium-length-blogging/"/>
    <updated>2015-11-05T06:34:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/more-short-and-medium-length-blogging</id>
    <content type="html"><![CDATA[<p>Okay, fine, Andy Ihnatko has me spun up again about blogging more with
his disucussion on this week&rsquo;s Macbreak Weekly about blogging more
again and rediscovering MarsEdit  He refers to Jason Snell&rsquo;s Six
Colors, John Gruber&rsquo;s Daring Fireball and Jim Dalrymple&rsquo;s The Loop.
Even Leo said he was doing the same thing on his rejuvenated Leoville.</p>

<p>Okay, I&rsquo;ll try kicking it up a notch, but maybe it&rsquo;s also time to
reflect on my setup with Markdown &ndash; Octopress &ndash; Github pages.</p>

<p><a href="https://twit.tv/shows/macbreak-weekly/episodes/479">Macbreak Weekly #479</a><br />
<a href="http://ihnatko.com/">Andy Ihnatko&rsquo;s Celestial Waste of Bandwidth</a><br />
<a href="https://sixcolors.com/">Six Colors</a><br />
<a href="http://www.loopinsight.com/">The Loop</a><br />
<a href="http://www.leoville.com/">Leoville</a><br />
<a href="http://daringfireball.net/">Daring Fireball</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome OS and Android Merge]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/05/chrome-os-and-android-merge/"/>
    <updated>2015-11-05T06:31:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/05/chrome-os-and-android-merge</id>
    <content type="html"><![CDATA[<p>I think John Gruber of Daring Fireball said it best.  &ldquo;I think this
was inevitable. Android can (and does) run Chrome. Chrome can’t run
Android. And the browser-based web is decreasing in importance.&rdquo;</p>

<p><a href="http://daringfireball.net/linked/2015/11/02/chromeos-to-fold">WSJ: &ldquo;Google to Fold Chrome Operating System Into Android&rdquo;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kilogram Conflict Resolved at Last]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/14/kilogram-conflict-resolved-at-last/"/>
    <updated>2015-10-14T00:39:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/14/kilogram-conflict-resolved-at-last</id>
    <content type="html"><![CDATA[<blockquote><p>For decades, metrologists have strived to retire ‘Le Grand K’ — the
platinum and iridium cylinder that for 126 years has defined the
kilogram from a high-security vault outside Paris. Now it looks as if
they at last have the data needed to replace the cylinder with a
definition based on mathematical constants.</p></blockquote>

<p>&hellip;</p>

<blockquote><p>One method, pioneered by an international team known as the Avogadro
Project, involves counting the atoms in two silicon-28 spheres that
each weigh the same as the reference kilogram. This allows them to
calculate a value for Avogadro’s constant, which the researchers
convert into a value for Planck’s constant. Another method uses a
device called a watt balance to produce a value for Planck’s constant
by weighing a test mass calibrated according to the reference kilogram
against an eletromagnetic force.</p></blockquote>

<p><a href="http://www.nature.com/news/kilogram-conflict-resolved-at-last-1.18550">Kilogram Conflict Resolved at Last</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Explicit Programming]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/02/explicit-programming/"/>
    <updated>2015-10-02T02:44:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/02/explicit-programming</id>
    <content type="html"><![CDATA[<p>An excellent article that shows how being more explicit in the code
makes for programs that are more readable.</p>

<p><a href="https://www.dzombak.com/blog/2014/07/explicit-programming.html">Explicit Programming</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Service Oriented Architecture]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/02/service-oriented-architecture/"/>
    <updated>2015-10-02T02:36:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/02/service-oriented-architecture</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s an interesting article about Uber&rsquo;s use of service oriented
architecture (SOA).</p>

<blockquote><p>As core domain models grew and new features were introduced, our
components became tightly coupled, and enforcing encapsulation made
separation of concerns difficult. Continuous integration turned into a
liability because deploying the codebase meant deploying everything at
once. Our engineering team experienced rapid growth and scaling, which
not only meant handling more requests but also handling a significant
increase in developer activity. Adding new features, fixing bugs, and
resolving technical debt all in a single repo became extremely
difficult. Tribal knowledge was required before attempting to make a
single change.</p></blockquote>

<p><a href="https://eng.uber.com/soa/">Service-Oriented Architecture: Scaling Our Codebase As We Grow</a></p>

<p><a href="http://martinfowler.com/articles/microservices.html">Microservices</a></p>

<p><a href="https://en.wikipedia.org/wiki/Service-oriented_architecture">SOA on Wikipedia</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Poor Performance of Javascript on Android]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/10/01/poor-performance-of-javascript-on-android/"/>
    <updated>2015-10-01T06:05:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/10/01/poor-performance-of-javascript-on-android</id>
    <content type="html"><![CDATA[<p>In a posted discussion Jeff Atwood claims that, &ldquo;For several years now
we&rsquo;ve tracked the fact that, over time from 2012 onward, Android
JavaScript performance has become wildly divergent from iOS JavaScript
performance. And not in a good way.&rdquo;</p>

<p>He says:</p>

<blockquote><p>This is the benchmark most representative of Discourse performance,
and the absolute best known Android score for this benchmark is right
at ~400ms on a Samsung Galaxy S6. That doesn&rsquo;t seem too bad until you
compare..</p>

<p>iPhone 5 → 340ms<br />
iPhone 5s → 175ms<br />
iPhone 6 → 140ms<br />
iPad Air 2 → 120ms<br />
iPhone 6s → 60-70ms</p>

<p>In a nutshell, the fastest known Android device available today &mdash; and
there are millions of Android devices much slower than that out there
&mdash; performs 5× slower than a new iPhone 6s, and a little worse than a
2012 era iPhone 5 in Ember. How depressing.</p></blockquote>

<p><a href="https://meta.discourse.org/t/the-state-of-javascript-on-android-in-2015-is-poor/33889">The State of JavaScript on Android in 2015 is… poor</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whence The Chat Paradigm]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/09/30/whence-the-chat-paradigm/"/>
    <updated>2015-09-30T05:02:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/09/30/whence-the-chat-paradigm</id>
    <content type="html"><![CDATA[<p>For some reason, the chat paradigm has become overly popular.  Internet
relay chat (IRC) was interesting in the mid-90s as a way to
communicate in an informal, unstructured sense.  However, I can&rsquo;t
believe it&rsquo;s still so popular.  Then we have Hipchat, Slack and
others.  What&rsquo;s the deal?</p>

<p>What is the utility of an endless scroll of mixed up and confused,
uncollated, blended conversations with no good way to determine their
topics or context?</p>

<p>Maybe it is the valid rebellion against email.  I thought for a while
that email had reached the end of its usefulness.  However, in my own
personal quest for a substitute, I&rsquo;ve reluctantly come to the
conclusion that email is the only workable, reliable solution.</p>

<p>Granted phone text messages are how I normally communicate with my
family.  Beyond my immediate family, family and friends are all on
Facebook.  One or two people still seem to use Google+ and, of course,
most Google employees.</p>

<p>Email has subjects, labels and excellent search.  It accommodates
messages of any length, including super short.</p>

<p>I do like the idea of minimal email and Google Inbox makes a valiant
attempt but I expect it to be squashed any minute as is the end of all
Google services, useful or not, end up.  Ultimately, the native, plain
old Gmail is actually quite minimal when you really look at it.  Each
message in a conversation has the names of the people, a picture of
the sender and the message.  It looks like chat.</p>

<p>One personal change I&rsquo;ve made quietly over the past few months is to
drop all signatures including just signing my name on email messages.
The truth is we still have a compulsion to write an email message like
a letter or office memo, and not like a tweet or chat snippet.  I&rsquo;ll
still write in complete, hopefully correct, sentences with correct
spelling.  When corresponding with someone I don&rsquo;t often send email
to, then I&rsquo;m less familiar and will include my first name or full name
and maybe even a signature if it&rsquo;s a business message.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blue Moon Definition Was Wrong]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/08/02/blue-moon-definition-was-wrong/"/>
    <updated>2015-08-02T03:14:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/08/02/blue-moon-definition-was-wrong</id>
    <content type="html"><![CDATA[<p><em>This is a blog post I published in Mon 2010-11-22 on the previous
<a href="http://monolith149daily.blogspot.com/2010/11/blue-moon-definition-was-wrong.html">Monolith149 Daily
Site</a>.</em></p>

<p><em>What does this mean?  According to the &ldquo;new incorrect definition&rdquo; the
 blue moon was this past week 31 Jul (based on time zone actually) but
 the next &ldquo;old correct definition&rdquo; blue moon is not actually until 2016-05-21!</em></p>

<p>From a Space.com article by Joe Rao.</p>

<p>I was wrong.  My wife said last night that the moon was a blue moon.
I said, that&rsquo;s not possible because a blue moon is a second full moon
in the same month and that couldn&rsquo;t happen on 21 Nov.  It has to
happen at the very end of a month.  She pointed me at the above
article that explains it.</p>

<p>The short answer is that the two full moons in a month definition is
actually erroneous.</p>

<p>Rao notes that Lawrence J. Lafleur, in <em>Sky and Telescope</em> in 1943,
quotes a 1937 edition of the <em>Maine Farmer&rsquo;s Almanac</em>, stating that a
blue moon is the rare occurance of four full moons in a season instead
of three.  The blue moon is the third moon in that season.</p>

<p>The mistake was apparently made by James Hugh Pruett in a 1946 <em>Sky and
Telescope</em> where he misinterpreted Lafleur&rsquo;s explanation to mean a
second full moon in a single month.  (See the above article for
details).</p>

<p>The wrong explanation was propagated by Deborah Byrd in the radio
program &ldquo;Stardate&rdquo; in 1980 and then the wrong definition, quoting Rao,
&ldquo;went viral.&rdquo;</p>

<p>It all makes me wonder when I first learned of the
two-full-moons-in-a-month definition.  I would have thought it was
long before 1980, but maybe it was after that date.</p>

<p>Well it sort of spoils the whole thing.  Now we&rsquo;ll have to talk about
old-correct-definition blue moons and new-incorrect-definition blue
moons and none of them will seem quite right any more.</p>

<p>This would all be a lot simpler if the moon would just actually turn
blue once in a while.</p>

<p><a href="http://www.space.com/9566-strange-story-sunday-blue-moon.html">The Really Strange Story Behind Sunday&rsquo;s Blue Moon
by Joe Rao, SPACE.com, Skywatching Columnist, 2010-11-19 12:26:00 -0500</a></p>

<p><a href="https://en.wikipedia.org/wiki/Blue_moon">Blue moon from Wikipedia</a></p>
]]></content>
  </entry>
  
</feed>
