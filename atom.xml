<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2017-02-06T07:33:20-05:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Binary Candles]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/binary-candles/"/>
    <updated>2017-02-06T07:18:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/binary-candles</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t remember where I read this last week, but the idea if binary
candles is brilliant.  You can represent any age up to 127 with seven
candles!  If you understand binary, you already know what to do.</p>

<!-- More -->


<p>Each candle reprsents a number.  Just light the candles for numbers
that add up to the age you want to represent.</p>

<p>To label the candles, the first one on the right is 1.  The next is
2.  Then you just keep doubling, 4, 8, 16, 32, 64.</p>

<pre><code>    ()      ()
||  ||  ||  ||  ||  ||  ||
||  ||  ||  ||  ||  ||  ||
||  ||  ||  ||  ||  ||  ||

64  32  16   8   4   2   1
</code></pre>

<p>In the above illustration, we represent the age 40.</p>

<pre><code>        ()      ()  ()  ()
||  ||  ||  ||  ||  ||  ||
||  ||  ||  ||  ||  ||  ||
||  ||  ||  ||  ||  ||  ||

64  32  16   8   4   2   1
</code></pre>

<p>This one is 23.  You get the idea.  And, yes, you can leave off the
candles on the left if they aren&rsquo;t lit.</p>

<p>This is how computers reprsent numbers, as &ldquo;bits&rdquo; (binary digits) that
can be on or off.  Bits are typically stored as transistors acting
like switches (on or off) or storing a charge on a tiny capacitor to
represent a one, a lit candle.  When transmitting data the bits may be
represented as different voltages or other signal level schemes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pine 64]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/pine-64/"/>
    <updated>2017-02-06T07:16:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/pine-64</id>
    <content type="html"><![CDATA[<p>Another, small (some under $20) single board computer series.</p>

<p><a href="https://www.pine64.org">Pine64</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The TTY Demystified]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/the-tty-demystified/"/>
    <updated>2017-02-06T07:11:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/the-tty-demystified</id>
    <content type="html"><![CDATA[<p>Though I&rsquo;d rather read a longer, more detailed history of the teletype
(which is easy to find, see Wikipedia below), this is a nice overview
of the UNIX/Linux TTY.</p>

<p><a href="http://www.linusakesson.net/programming/tty/">The TTY demystified</a><br />
<a href="https://en.wikipedia.org/wiki/Teleprinter">Teleprinter on Wikipedia</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scaling Git at Microsoft]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/scaling-git-at-microsoft/"/>
    <updated>2017-02-06T07:05:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/scaling-git-at-microsoft</id>
    <content type="html"><![CDATA[<p>&ldquo;A couple of years ago, Microsoft made the decision to begin a
multi-year investment in revitalizing our engineering system across
the company.&rdquo;</p>

<!-- More -->


<p>Brian Harry discusses a single git repo with six million files.</p>

<blockquote><p>So, fast forward to today.  It works!  We have all the code from 40+
Windows Source Depot servers in a single Git repo hosted on VS Team
Services – and it’s very usable.  You can enlist in a few minutes and
do all your normal Git operations in seconds.  And, for all intents
and purposes, it’s transparent.  It’s just Git.  Your devs keep
working the way they work, using the tools they use.  Your builds just
work.</p>

<p>As a side effect, this approach also has some very nice
characteristics for large binary files.  It doesn’t extend Git with a
new mechanism like LFS does, no turds, etc.  It allows you to treat
large binary files like any other file but it only downloads the blobs
you actually ever touch.</p></blockquote>

<p><a href="https://blogs.msdn.microsoft.com/bharry/2017/02/03/scaling-git-and-some-back-story/">Scaling Git (and some back story)</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flame Graphs]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/flame-graphs/"/>
    <updated>2017-02-06T07:02:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/flame-graphs</id>
    <content type="html"><![CDATA[<p>This post on flame graphs is an interesting data visualization used,
in this case, for plotting disk usage.</p>

<p><a href="http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html">Flame graphs for file systems</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ARM Processor Assembly Language]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/27/arm-processor-assembly-language/"/>
    <updated>2017-01-27T05:05:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/27/arm-processor-assembly-language</id>
    <content type="html"><![CDATA[<p>The ARM is one of the most popular processors today.  Think the
iPhone, Raspberry Pi.  I decided I should learn more about it since I
knew almost nothing about the ARM architecture.</p>

<!-- More -->


<p>From Wikipedia, &ldquo;In 2005, about 98% of all mobile phones sold used at
least one ARM processor. In 2010, producers of chips based on ARM
architectures reported shipments of 6.1 billion ARM-based processors,
representing 95% of smartphones, 35% of digital televisions and
set-top boxes and 10% of mobile computers. In 2011, the 32-bit ARM
architecture was the most widely used architecture in mobile devices
and the most popular 32-bit one in embedded systems. In 2013, 10
billion were produced and &lsquo;ARM-based chips are found in nearly 60
percent of the world’s mobile devices.&rsquo;&rdquo;</p>

<p>The short version is the following.  The ARM 32-bit processor has 16
general purpose 32-bit registers, though R14 and R15 are the stack
pointer and program counter, with an orthogonal set of instructions.
There&rsquo;s the so-called &ldquo;Thumb&rdquo; set of instructions.  If you use this
subset, the instructions can be &ldquo;compressed&rdquo; into 16-bit instructions.</p>

<p>Orthogonal means you don&rsquo;t need dedicated instructions for particular
registers, e.g., &ldquo;LDA&rdquo; to load a value into the accumulator, or &ldquo;STX&rdquo;
to store a value from an X index register into a memory location.
These instructions look like &ldquo;MOV R2, R3&rdquo; to move a value from R3 into
R2.</p>

<p>At some point it occurred to me that it should be pretty
straightforward to write and run assembler on a Raspberry Pi running
Raspbian Linux.  Voilà!</p>

<p>There&rsquo;s an excellent series called &ldquo;ARM Assembler in Raspberry Pi.&rdquo;
The posts are broken out into small chapters.  This set of examples
uses the gcc compiler to assemble .s files.  It pulls in the C
overhead to make an executable file.</p>

<h2>First Program</h2>

<p>Here&rsquo;s my first program</p>

<pre><code>.global main

main:            
    mov r0, #2  /* Put 2 in register r0. */
    bx lr       /* Return from main. */
</code></pre>

<p>To assemble and build it:</p>

<pre><code>as -o first.o first.s
gcc -o first first.o

pi&gt; ls -l
total 20
-rwxr-xr-x 1 pi pi 5564 Jan 14 21:38 first
-rw-r--r-- 1 pi pi  640 Jan 14 21:37 first.o
-rw-r--r-- 1 pi pi  193 Jan 14 21:37 first.s
</code></pre>

<p>Run.  The answer is the return code from the program.</p>

<pre><code>pi&gt; ./first
pi&gt; ./first ; echo $?
2
</code></pre>

<p>I found another excellent tutorial by Derek Banas on YouTube which
showed how to use the Linux &ldquo;ld(1)&rdquo; command to load (link) the
assembled .o file which has much lower overhead than using the gcc
compiler.  Of course, how could I have forgotten ld.</p>

<p><a href="https://www.arm.com/products/processors/instruction-set-architectures/index.php">ARM Processor Architecture</a><br />
<a href="https://en.wikipedia.org/wiki/ARM_architecture">Wikipedia: ARM architecture</a><br />
<a href="http://thinkingeek.com/2013/01/09/arm-assembler-raspberry-pi-chapter%E2%80%931/">ARM assembler in Raspberry Pi &ndash; Chapter 1</a><br />
<a href="http://www.davespace.co.uk/arm/introduction-to-arm/">Introduction to ARM</a><br />
<a href="https://youtu.be/ViNnfoE56V8">Assembly Language Tutorial (Video)</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi Device Driver]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/27/raspberry-pi-device-driver/"/>
    <updated>2017-01-27T05:02:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/27/raspberry-pi-device-driver</id>
    <content type="html"><![CDATA[<p>I was looking to learn at least the basics of the ARM processor and
found some wondeful references and tutorials to ARM assembly
language.  The one thing left was how device I/O works.  Here&rsquo;s a
simple device driver code project for Linux on ARM in, of course, the
Raspberry Pi.</p>

<p><a href="https://www.codeproject.com/Articles/1032794/Simple-I-O-device-driver-for-RaspberryPi">Simple I/O device driver for RaspberryPi</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[InterPlanetary File System]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/27/interplanetary-file-system/"/>
    <updated>2017-01-27T04:55:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/27/interplanetary-file-system</id>
    <content type="html"><![CDATA[<p>&ldquo;IPFS is a distributed file system that seeks to connect all computing
devices with the same system of files. In some ways, this is similar
to the original aims of the Web, but IPFS is actually more similar to
a single bittorrent swarm exchanging git objects.&rdquo;</p>

<!-- More -->


<p>According to the Github README, IPFS is a protocol, filesystem, web,
it&rsquo;s modular, uses crypto, is p2p, is a cdn, and has a name service.</p>

<p>&ldquo;Today, there is one main IPFS Protocol implementation (in Go) with
more on the way (Javascript, and Python).&rdquo;</p>

<p><a href="https://github.com/ipfs/ipfs">IPFS &ndash; The Permanent Web</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flight Problems]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/27/flight-problems/"/>
    <updated>2017-01-27T04:51:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/27/flight-problems</id>
    <content type="html"><![CDATA[<p>Iain Thomson on &ldquo;This Week in Tech&rdquo; listed an amusing flight problem
you don&rsquo;t want to experience:  &ldquo;A reduction in the number of wings.&rdquo;</p>

<p><a href="https://twit.tv/shows/this-week-in-tech/episodes/598?autostart=false">TWiT Episode 598</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deep Seated Container Vulnerability]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/27/deep-seated-container-vulnerability/"/>
    <updated>2017-01-27T04:40:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/27/deep-seated-container-vulnerability</id>
    <content type="html"><![CDATA[<p>&ldquo;A vulnerability in container operations has been brought to light by
Docker and other parties and illustrates why lack of multiple years of
experience with containers makes some implementers cautious. A command
to execute the RunC part of the Linux kernel under rare but
exploitable circumstances can result in a container process getting a
chance to inspect file descriptors on the host.&rdquo;</p>

<p><a href="http://www.informationweek.com/cloud/infrastructure-as-a-service/deep-seated-container-vulnerability-found-corrected/d/d-id/1327917">Deep-Seated Container Vulnerability Found, Corrected</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Danger: Effective Gmail Phishing]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/16/danger-effective-gmail-phishing/"/>
    <updated>2017-01-16T22:07:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/16/danger-effective-gmail-phishing</id>
    <content type="html"><![CDATA[<p>&ldquo;Wide Impact: Highly Effective Gmail Phishing Technique Being Exploited
by Mark Maunder&rdquo;</p>

<p>This is pretty insidious.  You get a message from someome you know.
It has an attachment.  You try to open it but up pops a Gmail login
page asking you to enter your password again for security.  That Gmail
login page is fake and your password is stolen as soon as you type it
in.</p>

<p><a href="https://www.wordfence.com/blog/2017/01/gmail-phishing-data-uri/">Effective Gmail Phishing</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon's Glacier Secret]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/01/16/amazons-glacier-secret/"/>
    <updated>2017-01-16T22:03:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/01/16/amazons-glacier-secret</id>
    <content type="html"><![CDATA[<p>BDXL.</p>

<p><a href="https://storagemojo.com/2014/04/25/amazons-glacier-secret-bdxl/">Amazon’s Glacier secret: BDXL by Robin Harris, Storage Mojo</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happy Winter Solstice]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/21/happy-winter-solstice/"/>
    <updated>2016-12-21T12:33:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/21/happy-winter-solstice</id>
    <content type="html"><![CDATA[<p>Happy Winter Solstice!  It was at 5:44 EST this morning.</p>

<pre><code>Wed 2016-12-21 10:44 +0000
Wed 2016-12-21 05:44 -0500
</code></pre>

<p><a href="http://earthsky.org/earth/everything-you-need-to-know-december-solstice">December solstice 2016 is the 21st</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flight Gear]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/flight-gear/"/>
    <updated>2016-12-20T15:05:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/flight-gear</id>
    <content type="html"><![CDATA[<p>I just recently learned from Andy Ihnatko on &ldquo;Macbreak Weekly&rdquo; that
there is an open source flight simulator called &ldquo;Flight Gear.&rdquo;  It
seems quite capable with many add-ons provided.</p>

<p><a href="http://www.flightgear.org">FlightGear.org</a><br />
<a href="https://en.wikipedia.org/wiki/FlightGear">FlightGear on Wikipedia</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[USENIX Computing Systems]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/usenix-computing-systems/"/>
    <updated>2016-12-20T15:02:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/usenix-computing-systems</id>
    <content type="html"><![CDATA[<p>For many years I received the USENIX &ldquo;Computing Systems&rdquo; journal and
recently, when doing I search, I discovered the entire archive is
on-line.</p>

<p><a href="https://www.usenix.org/publications/compsystems/computing-systems">Computing Systems</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NASA Made a Fundamental Mistake]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/nasa-made-a-fundamental-mistake/"/>
    <updated>2016-12-20T14:55:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/nasa-made-a-fundamental-mistake</id>
    <content type="html"><![CDATA[<p>On an ISS Power supply.</p>

<p>&ldquo;The ISS is currently home to&hellip;four 14,000-pound payload-holders
called ExPRESS Logistics Carriers. Experiments from Earth like the
laser-communicator OPALS fly up to Station and Lego-attach to these
carriers, which provide them with a place to stay and, just as
importantly, the electrical power and data links they need to do their
jobs. But since 2013, scientists sending up payloads have had trouble
with the on-orbit utility grid.&rdquo;</p>

<!-- More -->


<p>&ldquo;Right now, experiments need special power converters if they want to
hook up with the carriers. And that’s because NASA made a mistake:
Inside the carriers, some capacitors were installed incorrectly. &hellip;in
the part of the carriers that powers payloads, engineers installed
some capacitors backward.&rdquo;</p>

<p>&ldquo;In designing the carrier, engineers had first planned to use
capacitors that they could hook in any which way. But then they had
changed the design, swapping in one-way capacitors. In between, no one
had updated the blueprints. And so the circuit makers had made the
circuits exactly as instructed, not paying attention to which way the
capacitors faced. All four on-orbit carriers and the in-space spare
turned out to have the same problem.&rdquo;</p>

<p><a href="https://www.wired.com/2016/12/nasa-made-really-dumb-mistake-iss-power-supply/">NASA’s Power Supply Mistake on the ISS Was Totally Avoidable</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crash Course in Astronomy]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/crash-course-in-astronomy/"/>
    <updated>2016-12-20T14:49:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/crash-course-in-astronomy</id>
    <content type="html"><![CDATA[<p>I&rsquo;m not always a fan of Phil Plait, but he usually does an outstanding
job of explaining astronomy.  This course on Youtube of bite-sized
topics are quite well done.</p>

<!-- More -->


<p>I&rsquo;m also not a fan of cramming all of Phil&rsquo;s statments together in a
packed video.  It&rsquo;s frenetic and wears on me after a bit but, taken in
small doses, the content is good and the editing is bearable.</p>

<p><a href="https://www.youtube.com/playlist?list=PL8dPuuaLjXtPAJr1ysd5yGIyiSFuh0mIL">Crash Course Astronomy</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hyperfine Spectrum of Antimatter H]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/hyperfine-spectrum-of-antimatter-h/"/>
    <updated>2016-12-20T14:40:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/hyperfine-spectrum-of-antimatter-h</id>
    <content type="html"><![CDATA[<p>From phys.org,</p>

<p>&ldquo;In a paper published today in the journal Nature, the ALPHA
collaboration reports the first ever measurement on the optical
spectrum of an antimatter atom.&rdquo;</p>

<!-- More -->


<p>&ldquo;Today&rsquo;s ALPHA result is the first observation of a spectral line in
an antihydrogen atom, allowing the light spectrum of matter and
antimatter to be compared for the first time. Within experimental
limits, the result shows no difference compared to the equivalent
spectral line in hydrogen. This is consistent with the Standard Model
of particle physics, the theory that best describes particles and the
forces at work between them, which predicts that hydrogen and
antihydrogen should have identical spectroscopic characteristics.&rdquo;</p>

<p><a href="http://phys.org/news/2016-12-alpha-spectrum-antimatter.html">ALPHA observes light spectrum of antimatter for first time</a><br /></p>

<p><a href="http://phys.org/news/2014-01-cern-antihydrogen-atoms-hyperfine.html">CERN experiment produces first beam of antihydrogen atoms for
hyperfine study</a><br /></p>

<p><a href="http://www.nature.com/nature/journal/vaap/ncurrent/full/nature21040.html">Observation of the 1S–2S transition in trapped antihydrogen</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle Is Collecting Java Charges]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/oracle-is-collecting-java-charges/"/>
    <updated>2016-12-20T14:32:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/oracle-is-collecting-java-charges</id>
    <content type="html"><![CDATA[<p>This doesn&rsquo;t really apply to personal use of Java but mainly if you
develop and sell something.  (As far as I understand it).  The
Register says,</p>

<blockquote><p>Oracle is massively ramping up audits of Java customers it claims are
in breach of its licences – six years after it bought Sun
Microsystems.</p></blockquote>

<!-- More -->


<blockquote><p>A growing number of Oracle customers and partners have been approached
by Larry Ellison’s firm, which claims they are out of compliance on Java.</p>

<p>Java SE is free but Java SE Advanced Desktop, Advanced and Suite are
not. Java SE Suite, for example, costs $300 per named user with a
support bill of $66; there’s a per-processor option of $15,000 with a
$3,300 support bill. Java SE comes with the free JDK and JRE, but
Advanced Desktop, Advanced and Suite layer in additional capabilities
such as Java Mission Control and Flight Recorder also known as JRockit
Mission Control and JRockit Flight Recorder.</p>

<p>Java SE is free for what Oracle defines as &ldquo;general purpose computing&rdquo;
– devices that in the words of its licence cover desktops, notebooks,
smartphones and tablets. It is not free for what Oracle’s licence
defines as &ldquo;specialized embedded computers used in intelligent
systems&rdquo;, which Oracle further defines as &ndash; among other things &ndash;
mobile phones, hand-held devices, networking switches and Blu-Ray players.</p></blockquote>

<p><a href="http://www.theregister.co.uk/2016/12/16/oracle_targets_java_users_non_compliance?mt=1481991081793">Oracle finally targets Java non-payers – six years after plucking Sun</a><br />
<a href="https://java.com/en/">Java.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Color Gamut]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/11/23/color-gamut/"/>
    <updated>2016-11-23T01:06:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/11/23/color-gamut</id>
    <content type="html"><![CDATA[<p>The phrase &ldquo;color gamut&rdquo; has been thrown around a lot lately.  What is
it?  This blog post by Craig Hockenberry explains color gamut.</p>

<blockquote><p>From your point-of-view, the important thing about DCI-P3 is that it
can display a wider range of color. Apple’s promotional literature
states that the new iPad Pro has &ldquo;up to 25% greater color saturation
than previous models.&rdquo;</p></blockquote>

<!-- More -->


<p><a href="http://blog.iconfactory.com/2016/04/looking-at-the-future/">Looking at the Future</a><br /></p>
]]></content>
  </entry>
  
</feed>
