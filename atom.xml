<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2016-02-06T12:34:54-05:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tuning Facebook]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/02/06/tuning-facebook/"/>
    <updated>2016-02-06T12:29:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/02/06/tuning-facebook</id>
    <content type="html"><![CDATA[<p>Okay, I&rsquo;ve decided to try using the dreaded Facebook a little more,
particularly after hearing all of the talk about instant articles in
news and more people using Messenger. I knew about this podcast of
Robert Scoble (who&rsquo;s all in on Facebook) trying to teach Leo Laporte
how to use it back in August but had never gotten around to checking
it out.</p>

<!-- More -->


<p>If you want to learn how to &ldquo;really use&rdquo; Facebook in it&rsquo;s current
form, I recommend watching it and even working through this stuff.</p>

<p>So, starting around about 2016-01-30, I&rsquo;ve been trying most of what
they discuss there over the past few days and I am seeing my FB
experience much improved. There&rsquo;s a lot you can do to fine tune and
control things. I&rsquo;ll see how the news feeds compare to my Twitter
feed, etc.</p>

<p><a href="https://www.youtube.com/watch?v=U53iO3b1K-c">Triangulation 169: Robert Scoble&rsquo;s Facebook Lesson</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Olympus Pen F]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/02/06/olympus-pen-f/"/>
    <updated>2016-02-06T12:17:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/02/06/olympus-pen-f</id>
    <content type="html"><![CDATA[<p>Wow, the Olympus Pen F retro camera is quite beautiful.</p>

<!-- More -->


<p>Raymond Wong on Mashable says,</p>

<blockquote><p>The new PEN F is quite possibly the most retro mirrorless digital
camera the company has ever created. I dare say it&rsquo;s even more retro
than the company&rsquo;s high-end OM-D mirrorless cameras. It&rsquo;s not just
old-school aesthetics — the camera&rsquo;s got a dial on the front for
quickly switching between different color modes to emulate the look of
film.</p>

<p>The digital PEN F&rsquo;s design pays homage to the original PEN F film
camera released in 1963. The resemblance is obvious when the cameras
are next to each other. You can tell just by looking at it that the
engineers and designers sweated all of the details from the font to
the knurled metal dials.</p></blockquote>

<p>Features from dpreview.</p>

<ul>
<li>20MP Live MOS Four Thirds format sensor</li>
<li>5-axis image stabilization with automatic panning detection</li>
<li>2.36 million dot OLED electronic viewfinder</li>
<li>Up to 10 fps continuous shooting (20 fps with electronic shutter)</li>
<li>Highly customizable interface, twin controls</li>
<li>Fully articulating 1.04 million dot, 3&#8221; LCD touchscreen</li>
<li>50MP High-res Shot mode</li>
<li>1/8000 sec top mechanical shutter speed (1/16,000 with e-shutter)</li>
<li>1080/60p video recording</li>
</ul>


<p><a href="http://mashable.com/2016/01/27/olympus-pen-f/#Vk_Jt5drlkqM">Mashable</a><br />
<a href="http://www.getolympus.com/us/en/pen-f.html">At Olympus</a><br />
<a href="http://www.theverge.com/2016/1/27/10838726/olympus-pen-f-new-digital-version-pricing-availability">The Verge</a><br />
<a href="http://www.dpreview.com/reviews/history-repeating-olympus-pen-f-first-impressions-review">dpreview.com</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Microcontainers and Alpine Linux]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/02/06/microcontainers-and-alpine-linux/"/>
    <updated>2016-02-06T12:07:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/02/06/microcontainers-and-alpine-linux</id>
    <content type="html"><![CDATA[<p>This article on using Alpine Linux for Docker microcontainers is
interesting and seems to be a valid way to make containers
significantly more lightweight.</p>

<!-- More -->


<p>I didn&rsquo;t recall much about Alpine Linux so I fired up a Virtual Box
and installed it.  It&rsquo;s definitely small.  It uses BusyBox and libc is
different from the standard.  Python was there and it has a package
manager which works well enough.</p>

<p>It didn&rsquo;t pick up the name servers with DHCP so I kept having to
manually configure resolve.conf.  That&rsquo;s a problem I&rsquo;m sure could be
solved with some research and time.</p>

<p>The most heartbreaking thing is that GNU Emacs doesn&rsquo;t work with that
clib and seems that it&rsquo;s not going to.</p>

<p>In the end I decided it was nice and small, but really if I need to
run Linux in a persistent instance, I much prefer Ubuntu Server.</p>

<p>If I ever do deploy something using Docker, then Alpine is certainly
worth consiering if it supports the app and it&rsquo;s libraries.</p>

<p><a href="http://www.iron.io/blog/2016/01/microcontainers-tiny-portable-containers.html">Microcontainers – Tiny, Portable Docker Containers</a><br />
<a href="http://www.alpinelinux.org">Alpine Linux</a><br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Observing Gravitational Waves]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/02/06/observing-gravitational-waves/"/>
    <updated>2016-02-06T12:05:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/02/06/observing-gravitational-waves</id>
    <content type="html"><![CDATA[<p>The search for detection of gravitational waves continues.</p>

<p><a href="http://arstechnica.com/science/2016/02/after-100-years-scientists-are-finally-closing-in-on-einsteins-ripples/">Ars Technica article</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rachel Flowers plays Trilogy (and Tarkus)]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/02/06/rachel-flowers-plays-trilogy/"/>
    <updated>2016-02-06T11:51:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/02/06/rachel-flowers-plays-trilogy</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re a fan of Emerson, Lake and Palmer, checkout Rachel Flowers
playing &ldquo;Fugue&rdquo; and &ldquo;The Endless Enigma (Part 2)&rdquo; starting at the
3m29s mark at NAMM 2016.</p>

<p>She&rsquo;s also famous for her rendition of &ldquo;Tarkus,&rdquo; the entire piece.  Of
course she finally got Keith Emerson&rsquo;s attention and was able to play
it on his Hammond C3 and original Moog.</p>

<p><a href="https://youtu.be/-mzcED3vJ3g">NAMM 2016 Nord Piano 3 Performance with Rachel Flowers</a><br />
<a href="https://www.youtube.com/watch?v=HrXuvkj5Vi0">Rachel Flowers-Tarkus (complete)-solo piano</a><br />
<a href="https://www.youtube.com/watch?v=FLT3Cb96-Mk">Rachel Flowers &ndash; Tarkus with Emerson&rsquo;s Modular Moog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ducking Into a Nearby Phone Booth]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/23/ducking-into-a-nearby-phone-booth/"/>
    <updated>2016-01-23T14:31:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/23/ducking-into-a-nearby-phone-booth</id>
    <content type="html"><![CDATA[<p>I was recently wondering about the origin of Superman finding a phone
booth to change in.  I found one source on the origin and it was
surprising.</p>

<!-- More -->


<p>Why was I wondering about this in the first place?  It&rsquo;s because I was
thinking about the John Williams soundtrack from the 1978 movie.  I
recalled the scene where Clark Kent stops and glances at the little hood-like
phone booth and keeps going, looking for a place to change.  I
wondered where the changing in a phone booth meme came from since I
didn&rsquo;t recall Superman ever actually changing in a phone booth in any
of the comics or TV shows, etc.</p>

<p>A quick search online pulled up some interesting history including a
post by Steve Younis on supermanhoempage.com called &lsquo;Superman and the
Phone Booth.&#8221;</p>

<blockquote><p>In the Golden Age of comic books Clark Kent didn&rsquo;t use a phone booth
to change into Superman. Actually right throughout every era of
Superman comics the phone booth change has rarely been seen.</p></blockquote>

<p>The first time Superman changes is (spoiler):</p>

<blockquote><p>The answer lies way back in 1941.</p>

<p>To my knowledge, Clark Kent first changed to Superman inside a phone
booth in &ldquo;The Mechanical Monsters&rdquo;, the second of 17 Superman
cartoons produced by Fleischer Studios for Paramount Pictures. It
was released to cinemas on November 28 in 1941.</p></blockquote>

<p>I was pretty much unaware of the Fleischer Studios Superman
animations.  They&rsquo;re very well done and influenced some of the more
recent TV animations in style.</p>

<p>I recommend finding &ldquo;The Mechanical Monsters&rdquo; on Youtube and watching it.</p>

<p><a href="http://www.supermanhomepage.com/other/other.php?topic=phonebooth">Superman and the Phone Booth</a>
<a href="https://en.m.wikipedia.org/wiki/Superman_(1940s_cartoons">Superman 1940s cartoons</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scaling AWS]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/13/scaling-aws/"/>
    <updated>2016-01-13T21:21:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/13/scaling-aws</id>
    <content type="html"><![CDATA[<p>From the web site High Scalability is a nice article on scaling a
service on Amazon Web Services from one to over 11 million users.
It&rsquo;s based on a talk by Joel Williams from AWS.</p>

<!-- More -->


<p>He lists  these main points.</p>

<blockquote><ul>
<li><p>Start with SQL and only move to NoSQL when necessary.</p></li>
<li><p>A consistent theme is take components and separate them out. This
allows those components to scale and fail independently. It applies to
breaking up tiers and creating microservices.</p></li>
<li><p>Only invest in tasks that differentiate you as a business, don&rsquo;t
reinvent the wheel.</p></li>
<li><p>Scalability and redundancy are not two separate concepts, you can
often do both at the same time.</p></li>
<li><p>There&rsquo;s no mention of costs. That would be a good addition to the talk
as that is one of the major criticisms of AWS solutions.</p></li>
</ul>
</blockquote>

<p>The section for just one user is also quite helpful.</p>

<blockquote><ul>
<li><p>Run on a single instance, maybe a type t2.micro. Instance types
comprise varying combinations of CPU, memory, storage, and networking
capacity and give you the flexibility to choose the appropriate mix of
resources for your applications.</p></li>
<li><p>The one instance would run the entire web stack, for example: web app,
database, management, etc.</p></li>
<li><p>Use Amazon Route 53 for the DNS.</p></li>
<li><p>Attach a single Elastic IP address to the instance.</p></li>
</ul>
</blockquote>

<p><a href="http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html">A Beginner&rsquo;s Guide To Scaling To 11 Million+ Users On Amazon&rsquo;s AWS</a></p>

<p><a href="https://youtu.be/vg5onp8TU6Q">AWS re:Invent 2015 | (ARC301) Scaling Up to Your First 10 Million Users</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ultimate Amiga Talk]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/ultimate-amiga-talk/"/>
    <updated>2016-01-08T21:57:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/ultimate-amiga-talk</id>
    <content type="html"><![CDATA[<p>As an Amiga 1000 owner (I still have it) this talk was extremely well
done, brought back memories, and is quite accurate.</p>

<p><a href="https://youtu.be/BbVAvDbzXFk">The ultimate Amiga 500 (sic) talk</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Periodic Table Row Seven Complete]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/periodic-table-row-seven-complete/"/>
    <updated>2016-01-08T21:52:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/periodic-table-row-seven-complete</id>
    <content type="html"><![CDATA[<blockquote><p>Confirmation that four new elements – those with atomic numbers 113,
115, 117 and 118 – have indeed been synthesised has come from the
International Union of Pure and Applied Chemistry (Iupac), completing
the seventh row of the periodic table.</p></blockquote>

<!-- More -->


<blockquote><p>The groups credited for creating them – in Japan, Russia and the US –
have spent several years gathering enough evidence to convince experts
from Iupac and its physics equivalent, the International Union of Pure
and Applied Physics, of the elements’ existence. All four are highly
unstable superheavy metals that exist for only a fraction of a
second. They are made by bombarding heavy metal targets with beams of
ions, and can usually only be detected by measuring the radiation and
other nuclides produced as they decay.</p></blockquote>

<p><a href="http://www.rsc.org/chemistryworld/2016/01/new-elements-periodic-table-seventh-row-iupac">Confirmation of four new elements completes seventh row of periodic table</a> from the Royal Society of Chemistry by Emma Stoye.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Block Chain for Authentication]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/block-chain-for-authentication/"/>
    <updated>2016-01-08T21:39:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/block-chain-for-authentication</id>
    <content type="html"><![CDATA[<p>The latest rage is all about the block chain, made popular by Bitcoin.
It&rsquo;s not exactly authentication but more publication of data in a
sense that it becomes part of a sequential public record.  From that
point on, it can be looked up and verified.</p>

<!-- More -->


<p>The clever part is that the public record isn&rsquo;t posted in a particular
place or location but is distributed all over, approximately to
everyone who cares.  Since everyone has a copy, they can be verified
against each other.</p>

<p>As pointed out in the article below, it&rsquo;s like publishing a snippet
about a transaction in a newspaper which is then sent out to all
subscribers.  In this case, though, the newspaper contains all of the
transactions ever published there and just keeps adding to them.  You
can see one of the first problems right there.  This growing &ldquo;ledger&rdquo;
just keeps, well, growing.  It doesn&rsquo;t seem to scale well as they say.</p>

<p><a href="http://www.wired.co.uk/news/archive/2016-01/05/blockchain-is-the-new-signature">How the blockchain will enable self-service government</a> by Brian Forde and Michael Casey of Wired UK.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Atomic Energy Toys from the 50s]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/atomic-energy-toys-from-the-50s/"/>
    <updated>2016-01-08T21:30:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/atomic-energy-toys-from-the-50s</id>
    <content type="html"><![CDATA[<p><a href="http://www.orau.org/PTP/collection/atomictoys/GilbertU238Lab.htm">Gilbert U-238 Atomic Energy Lab (1950-1951)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi Much Faster Than SPARCstation 20]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/raspberry-pi-muct-faster-than-sparcstation-20/"/>
    <updated>2016-01-08T21:27:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/raspberry-pi-muct-faster-than-sparcstation-20</id>
    <content type="html"><![CDATA[<blockquote><p>A couple weeks back, I tweeted the following:</p>

<p>&ldquo;Turns out a Raspberry Pi now is about 6× as fast as a SPARCstation 20
was 20 years ago. And a Pi 2 is more like 15× as fast.&rdquo;</p>

<p>I was a little low in my numbers, too&mdash;they’re more like 7× and 16×
to 41× as fast&mdash;since I was going from memory!</p>

<p>Here’s how I came up with that.</p></blockquote>

<p><a href="http://eschatologist.net/blog/?p=266">Raspberry Pi vs SPARCstation 20: Fight!</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS Mistakes You Should Avoid]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/aws-mistakes-you-should-avoid/"/>
    <updated>2016-01-08T21:22:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/aws-mistakes-you-should-avoid</id>
    <content type="html"><![CDATA[<p>Michael Wittig writes on cloudonaut.io,</p>

<blockquote><p>As an AWS Cloud Consultant I see many AWS accounts. During the year I
collected mistakes that I saw in each account and aggregated them to
provide you my best of. It turned out that the 5 most common mistakes
on AWS are:</p>

<ul>
<li>managing infrastructure manually</li>
<li>not using Auto Scaling Groups</li>
<li>not analyzing metrics in CloudWatch</li>
<li>ignoring Trusted Advisor</li>
<li>underutilizing virtual machines</li>
</ul>
</blockquote>

<p><a href="https://cloudonaut.io/5-aws-mistakes-you-should-avoid/">5 AWS Mistakes You Should Avoid</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Time To Catch Up]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/time-to-catch-up/"/>
    <updated>2016-01-08T21:20:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/time-to-catch-up</id>
    <content type="html"><![CDATA[<p>Okay, it&rsquo;s time to catch up.  I haven&rsquo;t posted here since November but
I&rsquo;ve been stuffing links away in Evernote so it&rsquo;s time to empty some
of those out and post them, even if they&rsquo;re a few days or weeks old.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modern C Programming]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/01/08/modern-c-programming/"/>
    <updated>2016-01-08T21:13:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/01/08/modern-c-programming</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I&rsquo;ve written any serious C programs, but I
found this post via Hacker News quite thorough.</p>

<p><a href="https://matt.sh/howto-c">How to C in 2016</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meeblip Synthesizer]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/meeblip-synthesizer/"/>
    <updated>2015-11-21T14:42:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/meeblip-synthesizer</id>
    <content type="html"><![CDATA[<p>The Meeblip is a nifty little synthesizer with MIDI input.  If memory
serves it seems to have a set of oscillators, filters and LFO that&rsquo;s
about the same as the original Mini Moog.</p>

<p><a href="http://meeblip.com/">meeblip.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Write a Python Web Framework]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework/"/>
    <updated>2015-11-21T05:17:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework</id>
    <content type="html"><![CDATA[<p>You don&rsquo;t have to use Django, Flask, Cherrypy, or even web.py.  It&rsquo;s
all about WSGI.  Guess what.  Everything you need is already built
into Python.  After all, Python promises &ldquo;batteries included.&rdquo;</p>

<p><a href="http://funwithlinux.net/2015/11/how-to-write-a-python-web-framework-from-scratch/">How To Write a Python Web Framework From Scratch</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PC Engines]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/pc-engines/"/>
    <updated>2015-11-21T05:12:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/pc-engines</id>
    <content type="html"><![CDATA[<p>These are fascinating little computer boards and boxes that seem
perfect for making firewalls and such.  Boards are available with
three gigabit ethernet ports.  Prices are in the $100 range and there
is  support for Linux, e.g., Ubuntu.  Steve Gibson mentioned them on
Security Now.</p>

<p><a href="http://pcengines.ch/">pcengines.ch</a><br />
<a href="https://twit.tv/shows/security-now/episodes/534?autostart=false">Security Now 534</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging in Twitter Language]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/blogging-in-twitter-language/"/>
    <updated>2015-11-21T04:49:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/blogging-in-twitter-language</id>
    <content type="html"><![CDATA[<p>There&rsquo;s one thing Twitter has done and that&rsquo;s change the language of
reading news and stories so I&rsquo;m going to try an experiment.</p>

<!-- More -->


<p>Regardless of however things work out for Twitter it has had one
unmistakable effect on the way articles, essays, and other writing is
presented.  When you look at Facebook, Apple&rsquo;s News app, and almost
any site like Recode or The Verge, nearly everything looks like a
tweet.  You click on it to read the article.</p>

<p>Now, it&rsquo;s always the case that there&rsquo;s nothing new under the sun.
Headlines with snippets have been popular at least going back to the
80s, if memory serves and I&rsquo;m sure that, if I took the time to do the
research, I could find that story snippets are as old as news
publishing itself.  I believe I recall in the 80s when newspapers
started publishing a sort of index on page two of tweet-looking
headlines and snippets.  Magazines have done the same thing on their
index pages for a long time.</p>

<p>Still, the shift in the look of any story-collecting web site or, more
importantly, phone app has changed so that they all look strikingly
familiar.</p>

<p>So, at the risk of appearing as a trend follower, I&rsquo;m going to try
breaking my blog stories so that there&rsquo;s a shorter blurb on the main
page and you click to read the full story.</p>

<p>I guess there&rsquo;s a risk here when the blog post is mainly there to
share a link since you might have to click twice but maybe not.  Those
posts just won&rsquo;t have the &ldquo;Read More&rdquo; link but the actual story link
itself.  After all I can always do what I want here.  I can grow back
the main page piece as much as I want when I want.  That&rsquo;s part of
what&rsquo;s great about keeping your own blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apollo 11 Restored Video]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/18/apollo-11-video-restoration/"/>
    <updated>2015-11-18T06:52:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/18/apollo-11-video-restoration</id>
    <content type="html"><![CDATA[<p>From Wikipedia:</p>

<blockquote><p>The Apollo 11 missing tapes refers to Apollo 11&rsquo;s slow-scan television
(SSTV) telecast recorded in its raw format on telemetry data tape
during the time of the first Moonlanding in 1969. The recordings were
discovered to be &ldquo;missing&rdquo; after a team of retired NASA employees and
contractors tried to locate the tapes in the early 2000s.</p></blockquote>

<!-- More -->


<blockquote><p>The data tapes were recorded as a backup in case the live television
broadcasts failed for any reason. In order to broadcast the SSTV
transmission on standard television, NASA ground receiving stations
performed real-time scan conversion to the NTSC television format. The
moonwalk&rsquo;s converted video signal was broadcast live around the world
on July 21, 1969 (UTC). At the time, the NTSC broadcast was recorded
on many videotapes and kinescope films: they were never missing.</p></blockquote>

<p>&hellip;</p>

<blockquote><p>Although the researchers never found the telemetry tapes they were
looking for, they did discover the best visual quality NTSC videotapes
as well as super 8 movie film taken of a video monitor in Australia,
showing the SSTV transmission before it was converted. These visual
elements were processed in 2009, as part of a NASA approved
restoration project of the first Moonwalk. At a 2009 news conference
in Washington, D.C., the research team released its findings regarding
the tapes&#8217; disappearance. They also partially released newly enhanced
footage obtained during the search. Lowry Digital completed the full
Moonwalk restoration project in late 2009.</p></blockquote>

<p><a href="https://en.wikipedia.org/wiki/Apollo_11_missing_tapes">Apollo 11 missing tapes (from Wikipedia)</a>
<a href="https://www.nasa.gov/multimedia/hd/apollo11_hdpage.html">Apollo 11 HD Videos (NASA)</a></p>
]]></content>
  </entry>
  
</feed>
