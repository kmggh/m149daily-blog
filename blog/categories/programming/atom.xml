<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2017-03-28T08:03:41-04:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[APL Life]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/03/28/apl-life/"/>
    <updated>2017-03-28T07:38:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/03/28/apl-life</id>
    <content type="html"><![CDATA[<p>It&rsquo;s certainly true that Conway&rsquo;s Game of Life is one of those
wonderful toys that&rsquo;s brings joy when you take it out of the drawer
every once in a while.</p>

<p>There was a post this morning based around a Youtube video of a full
implementation of Life written in APL, as a single function of course.</p>

<!-- More -->


<p>In school we had the opportunity to dabble in APL in a survey of
languages class that was part of the typical core of computer science
classes.  There were one or two actual APL terminals in the terminal
cluster.  APL uses Greek letters along with the usual alphabet to
create a very concise and brief language and an actual APL terminal
had all of those characters on the keyboard.  If you didn&rsquo;t have an
APL terminal, then you had to resort to using short key words
instead.  Another guy on the hall of my dorm, who was an actual computer
science major (it was called information and computer science, ICS)
would go over to the cluster and play around with APL.</p>

<p>APL and LISP were the first purely functional programming languages I
had any experience with.  I knew they weren&rsquo;t like regular procedural
programs and everything was composed of functions, but I don&rsquo;t think
the term functional programming even existed then.  I also don&rsquo;t think
the dichotomy of functional programming vs. object-oriented
programming.  Smalltalk was still working through it&rsquo;s early childhood
at Xerox PARC.</p>

<p>Leap to the present and this wonderful video of the development of the
Game of Life using APL.  It&rsquo;s a joy to watch.  Don&rsquo;t be put off by the
strange Greek operators.  Watch the matrices as they are formed.  You
may feel like you&rsquo;re getting lost but, for Life enthusiasts, when he
adds the offsets to get the neighbor counts I think you&rsquo;ll see what&rsquo;s
happening.  It&rsquo;s incredibly brilliant.</p>

<p>Then Curtis Autery posted this wonderful primer on APL after
experiencing the difficulty of finding good APL information on-line.
He&rsquo;s done a great service to the language.</p>

<p><a href="https://youtu.be/a9xAKttWgP4">Conway&rsquo;s Game Of Life in APL</a><br />
<a href="https://curtisautery.appspot.com/5776042744610816">A deep dive into APL</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scaling Git at Microsoft]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2017/02/06/scaling-git-at-microsoft/"/>
    <updated>2017-02-06T07:05:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2017/02/06/scaling-git-at-microsoft</id>
    <content type="html"><![CDATA[<p>&ldquo;A couple of years ago, Microsoft made the decision to begin a
multi-year investment in revitalizing our engineering system across
the company.&rdquo;</p>

<!-- More -->


<p>Brian Harry discusses a single git repo with six million files.</p>

<blockquote><p>So, fast forward to today.  It works!  We have all the code from 40+
Windows Source Depot servers in a single Git repo hosted on VS Team
Services – and it’s very usable.  You can enlist in a few minutes and
do all your normal Git operations in seconds.  And, for all intents
and purposes, it’s transparent.  It’s just Git.  Your devs keep
working the way they work, using the tools they use.  Your builds just
work.</p>

<p>As a side effect, this approach also has some very nice
characteristics for large binary files.  It doesn’t extend Git with a
new mechanism like LFS does, no turds, etc.  It allows you to treat
large binary files like any other file but it only downloads the blobs
you actually ever touch.</p></blockquote>

<p><a href="https://blogs.msdn.microsoft.com/bharry/2017/02/03/scaling-git-and-some-back-story/">Scaling Git (and some back story)</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle Is Collecting Java Charges]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/12/20/oracle-is-collecting-java-charges/"/>
    <updated>2016-12-20T14:32:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/12/20/oracle-is-collecting-java-charges</id>
    <content type="html"><![CDATA[<p>This doesn&rsquo;t really apply to personal use of Java but mainly if you
develop and sell something.  (As far as I understand it).  The
Register says,</p>

<blockquote><p>Oracle is massively ramping up audits of Java customers it claims are
in breach of its licences – six years after it bought Sun
Microsystems.</p></blockquote>

<!-- More -->


<blockquote><p>A growing number of Oracle customers and partners have been approached
by Larry Ellison’s firm, which claims they are out of compliance on Java.</p>

<p>Java SE is free but Java SE Advanced Desktop, Advanced and Suite are
not. Java SE Suite, for example, costs $300 per named user with a
support bill of $66; there’s a per-processor option of $15,000 with a
$3,300 support bill. Java SE comes with the free JDK and JRE, but
Advanced Desktop, Advanced and Suite layer in additional capabilities
such as Java Mission Control and Flight Recorder also known as JRockit
Mission Control and JRockit Flight Recorder.</p>

<p>Java SE is free for what Oracle defines as &ldquo;general purpose computing&rdquo;
– devices that in the words of its licence cover desktops, notebooks,
smartphones and tablets. It is not free for what Oracle’s licence
defines as &ldquo;specialized embedded computers used in intelligent
systems&rdquo;, which Oracle further defines as &ndash; among other things &ndash;
mobile phones, hand-held devices, networking switches and Blu-Ray players.</p></blockquote>

<p><a href="http://www.theregister.co.uk/2016/12/16/oracle_targets_java_users_non_compliance?mt=1481991081793">Oracle finally targets Java non-payers – six years after plucking Sun</a><br />
<a href="https://java.com/en/">Java.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How it Feels to Learn Javascript]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/11/15/how-it-feels-to-learn-javascript/"/>
    <updated>2016-11-15T00:08:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/11/15/how-it-feels-to-learn-javascript</id>
    <content type="html"><![CDATA[<p>This article on Hacker Noon sounds too real.   It&rsquo;s depressing because
it&rsquo;s true.</p>

<p><a href="https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.vs20xmt4q">How it feels to learn JavaScript in 2016</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Might Not Need Javascript ]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/10/13/you-might-not-need-javascript/"/>
    <updated>2016-10-13T07:35:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/10/13/you-might-not-need-javascript</id>
    <content type="html"><![CDATA[<p><a href="http://hn.premii.com/#/article/12690842">You might not need JavaScript</a></p>

<p><a href="http://youmightnotneedjquery.com">You Might Not Need Jquery</a></p>
]]></content>
  </entry>
  
</feed>
