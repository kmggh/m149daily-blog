<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: web | Monolith149 Daily]]></title>
  <link href="http://kmggh.github.io/m149daily-blog//blog/categories/web/atom.xml" rel="self"/>
  <link href="http://kmggh.github.io/m149daily-blog//"/>
  <updated>2017-03-28T08:03:41-04:00</updated>
  <id>http://kmggh.github.io/m149daily-blog//</id>
  <author>
    <name><![CDATA[Ken Guyton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unreadable Web]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/11/01/unreadable-web/"/>
    <updated>2016-11-01T00:27:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/11/01/unreadable-web</id>
    <content type="html"><![CDATA[<p>Kevin Marks has written an excellent article on how web pages are
being made very hard to read because it&rsquo;s the in-style thing to do.</p>

<!-- More -->


<blockquote><p>There’s a widespread movement in design circles to reduce the contrast
between text and background, making type harder to read. Apple is
guilty. Google is, too. So is Twitter.</p>

<p>Typography may not seem like a crucial design element, but it is. One
of the reasons the web has become the default way that we access
information is that it makes that information broadly available to
everyone. “The power of the Web is in its universality,” wrote Tim
Berners-Lee, director of the World Wide Web consortium. “Access by
everyone regardless of disability is an essential aspect.”</p></blockquote>

<p><a href="https://backchannel.com/how-the-web-became-unreadable-a781ddc711b6#.70urt9e64">How the Web Became Unreadable</a><br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Might Not Need Javascript ]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/10/13/you-might-not-need-javascript/"/>
    <updated>2016-10-13T07:35:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/10/13/you-might-not-need-javascript</id>
    <content type="html"><![CDATA[<p><a href="http://hn.premii.com/#/article/12690842">You might not need JavaScript</a></p>

<p><a href="http://youmightnotneedjquery.com">You Might Not Need Jquery</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stop the Twitter Email!]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2016/10/02/stop-the-twitter-email/"/>
    <updated>2016-10-02T17:48:00-04:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2016/10/02/stop-the-twitter-email</id>
    <content type="html"><![CDATA[<p>Good grief!  Stop the email!  Okay, apparently I have more Twitter
accounts than you can count on one hand and I&rsquo;m getting a continuous
flood of email from them.  They are all filtered in various ways, in
Gmail, so they go into labels that are those I mostly don&rsquo;t read, but
the flood is still annoying.</p>

<!-- More -->


<p>Today, I finally logged into (almost) all of them and under Settings,
Email Notifications, I unclicked most of the blue boxes near the
bottom about network activity and suggestions and such.  I left
checked the boxes about letting me know if someone retweeted a tweet
(since that rarely happens except for one account I use as part of
work) or sent me a reply or direct message.  That should quiet down
the bird some.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Write a Python Web Framework]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework/"/>
    <updated>2015-11-21T05:17:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/21/write-a-python-web-framework</id>
    <content type="html"><![CDATA[<p>You don&rsquo;t have to use Django, Flask, Cherrypy, or even web.py.  It&rsquo;s
all about WSGI.  Guess what.  Everything you need is already built
into Python.  After all, Python promises &ldquo;batteries included.&rdquo;</p>

<p><a href="http://funwithlinux.net/2015/11/how-to-write-a-python-web-framework-from-scratch/">How To Write a Python Web Framework From Scratch</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Edward Tuft CSS]]></title>
    <link href="http://kmggh.github.io/m149daily-blog//blog/2015/11/14/edward-tuft-css/"/>
    <updated>2015-11-14T21:32:00-05:00</updated>
    <id>http://kmggh.github.io/m149daily-blog//blog/2015/11/14/edward-tuft-css</id>
    <content type="html"><![CDATA[<p>This is an interesting take on style, typesetting, publishing, and
CSS.  I don&rsquo;t agree with all of it but there are some nice ideas here
and the page/approach is very nice looking.</p>

<p>The main thing I disagree with is Tufte&rsquo;s strong preference for text
and prose rather than lists.  I think this is highly dependent on a
person&rsquo;s individual taste.  Also I&rsquo;m not convinced that a person who&rsquo;s
scanning an email message or document will absorb a paragraph of prose
as well as a bullet list.</p>

<p><a href="https://edwardtufte.github.io/tufte-css/">Tuft CSS</a></p>
]]></content>
  </entry>
  
</feed>
